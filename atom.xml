<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jeongwook, IT Blog</title>
  
  <subtitle>배움과 생각 쌓기</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jeongwookie.github.io/"/>
  <updated>2018-10-04T13:51:52.259Z</updated>
  <id>http://jeongwookie.github.io/</id>
  
  <author>
    <name>Jeongwook, Kim</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>모듈과 패키지</title>
    <link href="http://jeongwookie.github.io/2018/10/04/python-module/"/>
    <id>http://jeongwookie.github.io/2018/10/04/python-module/</id>
    <published>2018-10-04T12:46:51.000Z</published>
    <updated>2018-10-04T13:51:52.259Z</updated>
    
    <content type="html"><![CDATA[<p>코딩에서 가장 중요한 것은, 바로 남이 구현해 놓은 것을 가져다가 잘 쓰는 것이라고 배웠다.</p><p><strong>모듈 (moudule)</strong>이란 함수나 변수 혹은 클래스 등을 뫃아놓은 파일이며, 쉽게 말하면 다른 파이썬 프로그램에서 불러와 사용할 수 있게끔 만들어진 파이썬 파일이다.</p><p>다른 사람들이 이미 만들어 놓은 모듈을 사용하거나, 내가 직접 만들어서 사용할 수도 있다.</p><p>간단히 모듈을 만들고 불러와 보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># my_statistics.py</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a + b </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sub</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a - b</span><br><span class="line"></span><br><span class="line"><span class="comment"># my_main.py (my_statistics.py와 같은 폴더 내의 파일)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> my_statistics</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(my_statistics.add(<span class="number">10</span>,<span class="number">20</span>))</span><br><span class="line"><span class="number">30</span></span><br></pre></td></tr></table></figure><p>my_statistics.py라는 모듈을 불러오기 위하여 <code>import</code> 를 사용하였다.</p><p>불러온 이후, 모듈 내의 함수 <code>add</code>를 사용하기 위해 <strong>모듈이름.함수명()</strong>  와 같이 도트 연산자를 붙였다.</p><p><code>my_statistics.add(10,20)</code></p><p>조금 길지 않은가? 모듈 이름을 쓰지 않고 함수를 사용하는 방법도 있다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># my_main.py</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> my_statistics <span class="keyword">import</span> sum</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sum(<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"><span class="number">7</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> my_statistics <span class="keyword">import</span> *</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(sub(<span class="number">5</span>,<span class="number">2</span>))</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p>위와 같이 <strong>from 모듈이름 import 모듈함수</strong> 와 같은 형태를 입력하면, 그 함수를 모듈이름을 붙이지 않고 사용할 수 있다.</p><p>모듈 내 모든 함수를 불러오려면, <code>*</code>을 붙이면 된다.</p><p>이번에는, 앞서 만든 <code>my_statistics.py</code> 모듈에 몇 개의 코드를 추가해 보자.</p><p>모듈이 제대로 작동하는지 테스트를 위한 코드이다.</p><p>그리고, import를 통해 다른 파이썬 파일에서 모듈을 불러와 보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># my_statistics.py</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a + b </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sub</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a - b</span><br><span class="line"></span><br><span class="line">print(add(<span class="number">1</span>,<span class="number">3</span>))   <span class="comment"># 테스트 코드</span></span><br><span class="line">print(<span class="string">"my_statistics 파일입니다"</span>)   <span class="comment"># 테스트 코드</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># my_main.py</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> my_statistics</span><br><span class="line"><span class="number">4</span></span><br><span class="line">my_statistics 파일입니다</span><br></pre></td></tr></table></figure><p>나는 <code>my_statistics.py</code> 모듈 안의 <code>add</code> 함수와 <code>sub</code> 함수를 사용하려고 <code>import</code>했는데, 테스트 코드까지 같이 출력되어 버린다..</p><p>이러한 문제를 방지하기 위하여, <code>if __name__ == &quot;__main__&quot;</code>을 사용한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># my_statistics.py</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a + b </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sub</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a - b</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">   print(add(<span class="number">1</span>,<span class="number">3</span>))   </span><br><span class="line">   print(<span class="string">"my_statistics 파일입니다"</span>)   </span><br><span class="line"></span><br><span class="line"><span class="comment"># my_main.py</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> my_statistics</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p><code>import</code>를 실행했을 때 이제는 테스트 코드가 출력되지 않음을 알 수 있다.</p><p> 내가 만약 my_statistics.py을 직접 실행시킬 경우 <code>__name__</code>에는 <code>__main__</code> 이라는 값이 저장된다.</p><p> 하지만, my_main.py와 같은 다른 파이썬 파일에서 my_statistics.py을 직접 실행시킬 경우, <code>__name__</code>에는 <code>my_main.py</code> 이라는 값이 대신 저장된다.</p><p> 지금까지는 작성한 모듈과 실행하고 있는 파이썬 파일이 같은 디렉토리 안에 존재하는 경우만 다루었다.</p><p> 만약 내가 적당한 곳 (ex.바탕화면에 있는 python 폴더)에 py파일을 저장해 놓았는데, 이를 불러서 현재 디렉토리 내에서 사용하려면 어떻게 해야할까?</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.path.append(<span class="string">"C:\\Users\\JEONGWOOK\\python"</span>)</span><br></pre></td></tr></table></figure><p><code>sys.path</code>는 파이썬 라이브러리들이 설치되어 있는 디렉토리를 list 자료형으로 가지고 있다.</p><p>여기다가 우리는 <a href="https://jeongwookie.github.io/2018/09/12/list-operation/">list 자료형 다루기</a>에서 언급하였던 <code>append()</code>함수를 사용하여 요소를 추가하면 된다.</p><p>파이썬 모듈의 경로를 입력할 때, <code>\</code>가 <code>&quot; &quot;</code> 안에서 인식되게 하기 위하여 <code>\\</code> 이렇게 두 번 입력했음에 유의하자.</p><p><strong>패키지 (package)</strong>는 모듈들을 묶어놓은 것으로, 폴더 형태로 생각하면 된다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root_package/</span><br><span class="line">    __init__.py</span><br><span class="line">    sub_package_1/</span><br><span class="line">        __init__.py</span><br><span class="line">        module1.py</span><br><span class="line">        module2.py</span><br><span class="line">    sub_package_2/</span><br><span class="line">        __init__.py</span><br><span class="line">        module3.py</span><br><span class="line">        module4.py</span><br></pre></td></tr></table></figure><p>위 구조를 예시로 살펴보면, <code>root_package</code>안에 <code>sub_package_1</code>과 <code>sub_package_2</code>가 있고 각각의 디렉토리 안에 모듈들이 들어 있다.</p><p>패키지 안의 모듈을 사용하려면 루트 디렉토리부터 경로를 적어주면 된다.</p><p><code>import root_package.sub_package_1.module1</code></p><p>패키지의 경우 보통 많은 개발자들이 참여하는 복잡한 프로젝트의 경우에 사용한다. </p><p>그러므로 조금 더 자세한 내용을 보려면 <a href="https://wikidocs.net/1418" target="_blank" rel="noopener">여기</a>를 클릭하자.</p>]]></content>
    
    <summary type="html">
    
      파이썬에서 모듈과 패키지 사용하기
    
    </summary>
    
      <category term="Programming" scheme="http://jeongwookie.github.io/categories/Programming/"/>
    
      <category term="Python" scheme="http://jeongwookie.github.io/categories/Programming/Python/"/>
    
    
      <category term="파이썬" scheme="http://jeongwookie.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/"/>
    
      <category term="교육" scheme="http://jeongwookie.github.io/tags/%EA%B5%90%EC%9C%A1/"/>
    
      <category term="개발" scheme="http://jeongwookie.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="KAIST IT 프로그램" scheme="http://jeongwookie.github.io/tags/KAIST-IT-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/"/>
    
  </entry>
  
  <entry>
    <title>구글 애드센스(Adsense) 추가하기</title>
    <link href="http://jeongwookie.github.io/2018/10/02/put-google-adsense-in-your-hexo-blog/"/>
    <id>http://jeongwookie.github.io/2018/10/02/put-google-adsense-in-your-hexo-blog/</id>
    <published>2018-10-02T05:18:51.000Z</published>
    <updated>2018-10-02T07:12:58.206Z</updated>
    
    <content type="html"><![CDATA[<p>블로그를 시작하다 보니 자연스럽게 광고에도 관심이 갔다.</p><p>아직 View 수가 많거나 방문자 수가 셀 수 없을 만큼은 안되지만, 광고를 추가하고 싶었다.</p><p>그러나 방문하신 분이 불쾌하지 않고, 본문을 읽기에 방해가 되지 않는 선에서만.</p><p>가장 유명하고, 많이 사용하는 광고 툴이 바로 <a href="https://www.google.co.kr/intl/ko/adsense/start/?utm_medium=cpc&amp;utm_source=google&amp;utm_campaign=1001272-adsense-acquisition-kr-ko-hybrid-bkws&amp;utm_term=google%20adsense&amp;utm_content=224589754532&amp;gclid=Cj0KCQjwi8fdBRCVARIsAEkDvnIFHkEsQhYsyqEVi7VMWwdOS7AQS8c7tCQbRhzm47L_wsOxjFkgBhoaAmXxEALw_wcB#/?modal_active=none" target="_blank" rel="noopener">구글 애드센스 (Google adsense)</a></p><p><img src="https://user-images.githubusercontent.com/25416425/46330778-ab181b80-c64f-11e8-88c7-89ea4f8ca341.PNG" alt="구글 애드센스 (Google Adsense) 홈페이지"></p><p>홈페이지에 접속하면, 구글 계정으로 로그인 한 후, 먼저 구글 애드센스에 가입해야 한다.</p><p>광고를 등록하고자 하는 웹사이트 URL과 구글 이메일 주소를 입력하면 된다.</p><p>그 후는 통상 하는 회원가입과 비슷한데, 한 가지 유의할 점은 주소를 입력할 때 실거주지를 제대로 입력해야 한다는거! 한글로 써도 무방하다.</p><p>이 주소로 우편물이 오는데, <u>여기 적힌 Pin 번호를 입력해야 수익이 지급되니 주의할 것.</u></p><p>이까지는 참 쉽다! 하지만.. 이제부터가 시작이다 ㅠㅠ</p><p>많은 블로거들이 고생하는 <strong>구글 애드센스 계정 활성화하기</strong>, 나도 오늘까지는 안되는 줄 알았다.</p><p><img src="https://user-images.githubusercontent.com/25416425/46331991-5bd4e980-c655-11e8-8c36-fc2fa819d64d.jpg" alt="공포의 구글 애드센스 사이트 검토 과정 시작"></p><p>필자의 경우 Hexo를 통해 블로그를 구성하고 있으며 테마는 Hueman을 사용하고 있다.<br>(<a href="https://futurecreator.github.io/2016/06/14/hexo-apply-hueman-theme/" target="_blank" rel="noopener">Hexo 블로그 테마 적용하기</a> - Eric Han님의 블로그 참고)</p><p>구글 애드센스의 안내로는 자신의 페이지의 <head> HTML 태그 바로 뒤에 붙여넣으라 하는데.. </head></p><p>지금 hexo로 구성된 파일들을 보면 index.html이 여러가지 js파일을 통해 <code>hexo generate</code> 할 때 마다 생성되고 있었고, 여기에다가 붙여넣는 것은 의미가 없었다.</p><p>어찌어찌 검색을 통해서 알아낸 사실은, <code>themes</code> 폴더 안에 있는 <code>layout</code> 폴더에 들어가서 여기 파일 중 <code>layout.ejs</code>가 전체적인 레이아웃을 담당하고 있다는 것이다.</p><p>그래서 여기 <code>&lt;body&gt;</code> 태그 위에 코드를 그대로 붙여 넣었었다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">common</span>/<span class="attr">head</span>') %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">common</span>/<span class="attr">header</span>', <span class="attr">null</span>, &#123;<span class="attr">cache:</span> !<span class="attr">config.relative_link</span>&#125;) %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main-body container-inner"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main-body-inner"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">common</span>/<span class="attr">content-title</span>') %&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main-body-content"</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!-- 여기다가 코드 붙여넣기 --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%-</span> <span class="attr">body</span> %&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">common</span>/<span class="attr">sidebar</span>') %&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">common</span>/<span class="attr">footer</span>', <span class="attr">null</span>, &#123;<span class="attr">cache:</span> !<span class="attr">config.relative_link</span>&#125;) %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">common</span>/<span class="attr">scripts</span>') %&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>그런데, 1주일을 넘게 기다렸는데도 승인 메일은 오지 않았다..</p><p>그래서 뭔가 조취를 취해야 겠다고 생각했다.</p><p>블로그를 세팅할 때 많은 도움을 주신 Eric Han님의 블로그에서 다시 찬찬히 <a href="https://futurecreator.github.io/2016/06/16/add-google-adsense-to-hexo/" target="_blank" rel="noopener">Hexo 블로그에 구글 애드센스(Adsense) 추가하기</a> 글을 따라해 보았다.</p><p>먼저, <code>layout</code> 폴더 안에 <code>ads</code>라는 폴더를 새로 만들었다.</p><p>그리고 아까 전 <code>layout.ejs</code> 안에 붙어넣었던 구글 애드센스가 준 코드를 지우고, 새로 만든 ads 폴더 안에 <code>adsense.ejs</code>를 새로 만들어서 거기다가 코드를 붙여 넣었다.</p><p><img src="https://user-images.githubusercontent.com/25416425/46332993-8fb20e00-c659-11e8-8499-2df26e5a74a9.jpg" alt="adsense.ejs 파일을 새로 만들었다"></p><p>그리고 내가 광고를 개제하고 싶은 공간에다가 모두 <code>&lt;%- partial(&#39;ads/adsense&#39;) %&gt;</code> 를 붙여 넣었다.</p><ol><li>본문 상단</li></ol><p><code>themes/layout/layout.ejs</code> 파일 안의 <code>&lt;%- body %&gt;</code> 바로 위에 붙여넣기.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">common</span>/<span class="attr">head</span>') %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">common</span>/<span class="attr">header</span>', <span class="attr">null</span>, &#123;<span class="attr">cache:</span> !<span class="attr">config.relative_link</span>&#125;) %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main-body container-inner"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main-body-inner"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">common</span>/<span class="attr">content-title</span>') %&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main-body-content"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">ads</span>/<span class="attr">adsense</span>') %&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%-</span> <span class="attr">body</span> %&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">common</span>/<span class="attr">sidebar</span>') %&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">common</span>/<span class="attr">footer</span>', <span class="attr">null</span>, &#123;<span class="attr">cache:</span> !<span class="attr">config.relative_link</span>&#125;) %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">common</span>/<span class="attr">scripts</span>') %&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>본문 하단</li></ol><p><code>themes/layout/common/article.ejs</code> 파일 안의 <code>&lt;footer class=&quot;article-footer&quot;&gt;</code> 바로 위에 붙여넣기.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span> <span class="attr">id</span>=<span class="string">"&lt;%= post.layout %&gt;-&lt;%= post.slug %&gt;"</span> <span class="attr">class</span>=<span class="string">"article article-single article-type-&lt;%= post.layout %&gt;&lt;%= (post.direction &amp;&amp; post.direction.toLowerCase() === 'rtl' ? ' rtl' : '') %&gt;"</span> <span class="attr">itemscope</span> <span class="attr">itemprop</span>=<span class="string">"blogPost"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article-inner"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">post.link</span> || <span class="attr">post.title</span>) &#123; %&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"article-header"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">title</span>', &#123; <span class="attr">class_name:</span> '<span class="attr">article-title</span>' &#125;) %&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">post.layout</span> != <span class="string">'page'</span>) &#123; %&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article-meta"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">date</span>', &#123; <span class="attr">class_name:</span> '<span class="attr">article-date</span>', <span class="attr">date_format:</span> <span class="attr">null</span> &#125;) %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">author</span>') %&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">tag</span>') %&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">gallery</span>') %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article-entry"</span> <span class="attr">itemprop</span>=<span class="string">"articleBody"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%-</span> <span class="attr">post.content</span> %&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">ads</span>/<span class="attr">adsense</span>') %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"article-footer"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">share</span>/<span class="attr">index</span>', &#123; <span class="attr">post:</span> <span class="attr">post</span> &#125;) %&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">comment</span>/<span class="attr">index</span>') %&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>사이드바</li></ol><p><code>themes/layout/common/sidebar.ejs</code> 파일 안의 제일 아래 <code>&lt;/aside&gt;</code> 바로 위에 붙여넣기.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aside</span> <span class="attr">id</span>=<span class="string">"sidebar"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sidebar-toggle"</span> <span class="attr">title</span>=<span class="string">"Expand Sidebar"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"toggle icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sidebar-top"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">__</span>('<span class="attr">sidebar.follow</span>') %&gt;</span>:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"social-links"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span> (<span class="attr">var</span> <span class="attr">i</span> <span class="attr">in</span> <span class="attr">theme.customize.social_links</span>) &#123; %&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.customize.social_links</span>[<span class="attr">i</span>]) &#123; %&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"social-tooltip"</span> <span class="attr">title</span>=<span class="string">"&lt;%= i %&gt;"</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(theme.customize.social_links[i]) %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">rel</span>=<span class="string">"noopener"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon fa fa-&lt;%= i %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"github-card"</span> <span class="attr">data-github</span>=<span class="string">"jeongwookie"</span> <span class="attr">data-width</span>=<span class="string">""</span> <span class="attr">data-height</span>=<span class="string">""</span> <span class="attr">data-theme</span>=<span class="string">"default"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/github-cards/latest/widget.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">is_post</span>()) &#123; %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">post</span>/<span class="attr">nav</span>', &#123;<span class="attr">post:</span> <span class="attr">page</span>&#125;) %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"widgets-container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.widgets</span>) &#123; %&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%</span> <span class="attr">theme.widgets.forEach</span>(<span class="attr">function</span>(<span class="attr">widget</span>) &#123; %&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">widget</span>/' + <span class="attr">widget</span>, &#123;<span class="attr">post:</span> <span class="attr">page</span>&#125;) %&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%</span> &#125;) %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">ads</span>/<span class="attr">adsense</span>') %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br></pre></td></tr></table></figure><p>그리고 <code>hexo g --d</code>를 입력하면 끝!</p><p><code>adsense.ejs</code>에 작성한 코드는 구글 애드센스가 준 페이지 확인 코드이기 때문에, 따로 generate 시 제대로 적용 되었는지 확인할 방도가 없다..</p><p>나도 이렇게 해놓긴 했는데 제대로 된건지 안된건지 알수가 없어서 그냥 그대로 방치(?)했는데,</p><p>이렇게 세팅한지 2주 가까이 되었나? 거의 까먹어 갈 때 즈음 메일이 왔다.</p><p><img src="https://user-images.githubusercontent.com/25416425/46333612-ea4c6980-c65b-11e8-8177-a0a1322af4e2.png" alt="애드센스 연결 완료!!! 와 이게 몇주만이냐"></p><p>참고로 승인이 날 동안 블로그의 방문자수는 거의 0에 수렴하였고, 게시글의 숫자도 20개가 채 안되었었다.</p><p>블로그 게시물 숫자나 방문자 수가 승인 기준이 아니라, 그냥 제대로 된 곳에 코드를 잘 붙여놓고 인내심을 가지면 해결되는 문제인 것 같다.</p><p>승인 이후에는 매우 쉽다.</p><p>승인된 계정으로 다시 한번 애드센스 홈페이지에 접속하고, <strong>내 광고 &gt; 콘텐츠 &gt; 광고 단위</strong> 메뉴에 들어가서 새 광고를 만들면 된다.</p><p><img src="https://user-images.githubusercontent.com/25416425/46333830-c50c2b00-c65c-11e8-99e8-c1d597462327.png" alt="텍스트 및 디스플레이 광고 만들기. 반응형을 클릭하면 된다."></p><p>등록을 완료하면, 고유 코드가 생성되는데 이것을 복사한다.</p><p>그리고 앞서 만들어놓은 <code>themes/layout/ads/adsense/ejs</code> 파일 안에 있는 구글 애드센스 계정 등록 시 사용되었던 코드를 깨끗하게 지우고, 여기다가 붙여 넣으면 된다.</p><p>필자와 똑같이 하면, 구글 애드센스 광고가 본문 상단, 본문 하단, 그리고 사이드바에 성공적으로 위치함을 확인할 수 있다.</p><p>조금 더 상세한 정보를 알고 싶다면 <a href="https://futurecreator.github.io/2016/06/16/add-google-adsense-to-hexo/" target="_blank" rel="noopener">Eric Han’s Blog</a> 를 참고하자.</p>]]></content>
    
    <summary type="html">
    
      Hexo 블로그에 광고 (google adsense) 추가하는 방법
    
    </summary>
    
      <category term="Hexo" scheme="http://jeongwookie.github.io/categories/Hexo/"/>
    
    
      <category term="블로그 issue" scheme="http://jeongwookie.github.io/tags/%EB%B8%94%EB%A1%9C%EA%B7%B8-issue/"/>
    
      <category term="Hexo" scheme="http://jeongwookie.github.io/tags/Hexo/"/>
    
      <category term="Google Adsense" scheme="http://jeongwookie.github.io/tags/Google-Adsense/"/>
    
  </entry>
  
  <entry>
    <title>파이썬에서 클래스 쉽게 다루기</title>
    <link href="http://jeongwookie.github.io/2018/09/30/python-class/"/>
    <id>http://jeongwookie.github.io/2018/09/30/python-class/</id>
    <published>2018-09-29T16:25:25.000Z</published>
    <updated>2018-09-29T18:17:50.058Z</updated>
    
    <content type="html"><![CDATA[<p>오랜만의 포스트.</p><p>추석동안 집에 다녀오고, 돌아와서는 이것저것 일하다 보니 벌써 주말이다.</p><p>세 번째 섹션부터 배우기 시작한 클래스는 우리의 단순 노동 작업을 크게 줄여주고, 코드를 깔끔하게 해 주는 효자다.</p><p>찬찬히 배운 내용을 정리해 보겠다.</p><p><strong>클래스</strong>는 <u>붕어빵 틀</u>이다. 일종의 틀로, 똑같은 무언가를 만들어 낼 수 있는 도면과 같은 것이다.</p><p><strong>객체</strong>는 클래스라는 틀에 의해 생성된 구체적인 어떤 것을 칭한다.</p><p><img src="https://user-images.githubusercontent.com/25416425/46248490-cec34200-c454-11e8-8aa5-310335ed6530.png" alt="붕어빵 틀은 클래스, 만들어진 붕어빵은 객체"></p><p>간단하게 예제를 통해서 클래스의 기본 구조에 대해 먼저 이해해 보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FourCal</span>:</span>    <span class="comment"># 클래스명 "FourCal" 선언</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setdata</span><span class="params">(self, first, second)</span>:</span>   <span class="comment"># 매개변수 선언</span></span><br><span class="line">        self.first = first</span><br><span class="line">        self.second = second</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = FourCal()    <span class="comment"># 객체 "a" 생성 (FourCal의 인스턴스)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.setdata(<span class="number">4</span>,<span class="number">2</span>)   <span class="comment"># 입력값 4와 2 전달</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a.first)</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a.second)</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p>파이썬에서 클래스를 다룰 때, 매개변수에 <strong>self</strong>를 포함시켜야 함에 주의하자.</p><p>아래의 그림을 보면 그 구조를 파악하기 쉬울 것이다. 참고 : <a href="https://wikidocs.net/28" target="_blank" rel="noopener">파이썬 위키</a></p><p><img src="https://user-images.githubusercontent.com/25416425/46248374-8192a080-c453-11e8-8c0e-aa1e4a8f7c72.png" alt="객체와 호출 입력값의 전달 구조"></p><p>이제 이 기본 지식으로 하나하나 클래스를 구현해 볼 것이다.</p><p>지금부터 내가 게임 개발자라고 가정해 보자. 다음과 같은 임무가 주어졌다.</p><ul><li>기사, 마법사, 궁수 캐릭터를 만들어라.</li><li>각각의 캐릭터는 레벨, 이름, HP가 있다.</li><li>각각의 캐릭터는 좌우, 앞뒤로 움직일 수 있다.</li><li>각각의 캐릭터는 공격을 할 수 있다.</li><li>마법사는 마법을 쓸 수 있다.</li></ul><p>먼저 기사 클래스부터 만들어 보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Knight</span>:</span></span><br><span class="line">    level = <span class="number">20</span></span><br><span class="line">    name = <span class="string">"Battery"</span></span><br><span class="line">    hp = <span class="number">200</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(self, direction)</span>:</span></span><br><span class="line">        print(direction + <span class="string">"방향으로 이동합니다"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.name + <span class="string">"이(가) 공격합니다"</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>knight1 = Knight()    <span class="comment"># knight1 객체 선언 (클래스명 Knight의 인스턴스)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(knight1.level, knight1.name, knight1.hp)</span><br><span class="line"><span class="number">20</span> Battery <span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>knight1.move(<span class="string">"왼쪽"</span>)</span><br><span class="line">왼쪽방향으로 이동합니다</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>knight1.attack()</span><br><span class="line">Battery이(가) 공격합니다</span><br></pre></td></tr></table></figure><p>위에서 level, name, hp 등의 클래스 안에서 변수를 지정하는 것을 <strong>클래스 변수</strong> 라고 한다. 멤버 변수라고도 부른다.</p><p>위 코드에 따르면, Knight 클래스에 의해서 생성된 인스턴스들은 기본적으로 지정된 클래스 변수 값을 가진다.</p><p>기사 직업을 가진 유저가 어디 한둘 이겠는가? 객체를 생성할 때 바로바로 클래스 변수를 설정할 수 있도록 <strong>객체 변수</strong>를 설정해 보자.</p><p><strong><strong>init</strong>()</strong> 은 객체를 생성할 때 호출되는 함수이다.</p><p>여러가지 클래스 변수들을 객체가 생성될 때 설정할 수 있게 해준다.</p><p>이번에는 기사 말고 마법사 클래스를 <strong>객체 변수</strong>를 사용하여 예시로 만들어보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Wizard</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, level, name, hp)</span>:</span>    <span class="comment"># 4개의 객체 변수 지정</span></span><br><span class="line">        self.level = level</span><br><span class="line">        self.name = name</span><br><span class="line">        self.hp = hp</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(self, direction)</span>:</span></span><br><span class="line">        print(direction + <span class="string">"방향으로 이동합니다"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.name + <span class="string">"이(가) 공격합니다"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">magic</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.name + <span class="string">"이(가) 마법을 사용합니다"</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>wizard1 = Wizard(<span class="number">30</span>, Bloodtrail, <span class="number">150</span>)    <span class="comment"># wizard1 객체 생성</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(wizard1.level, wizard1.name, wizard1.hp)</span><br><span class="line"><span class="number">30</span> Bloodtrail <span class="number">150</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>wizard1.move(<span class="string">"위쪽"</span>)</span><br><span class="line">위쪽방향으로 이동합니다</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>wizard1.attack()</span><br><span class="line">Bloodtrail이(가) 공격합니다</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>wizard1.magic()</span><br><span class="line">Bloodtrail이(가) 마법을 사용합니다</span><br></pre></td></tr></table></figure><p>코드를 짜다보니 앞서 작성한 기사 클래스와 겹치는 부분이 많다. (짜증)</p><p>그리고 이렇게 각각의 클래스를 작성하면, 객체 변수를 하나 추가하고 싶을 경우 클래스 3개를 수정해야 하는 불상사가 발생하게 된다..</p><p>지금은 클래스가 3개라서 다행이지만, 만약 클래스가 100개라면?</p><p><img src="https://user-images.githubusercontent.com/25416425/46248998-a8090980-c45c-11e8-99ce-b1dcc08a1f09.jpg" alt="난 못해! 못한다고!!"></p><p>이런 경우, 우리는 <u>상속이 추가된 클래스 구조</u>를 생각해야 한다.</p><p><strong>상속</strong>이란, 부모 클래스에 이미 구현되어진 클래스 변수와 함수를 자식 클래스가 받아서 사용하는 것을 의미한다.</p><p>위 예제 코드에서 반복되는 부분을 부모 클래스로 구성해 보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Character</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, level, name, hp)</span>:</span>    <span class="comment"># 반복되는 클래스 변수</span></span><br><span class="line">        self.level = level</span><br><span class="line">        self.name = name</span><br><span class="line">        self.hp = hp</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(self, direction)</span>:</span>    <span class="comment"># 반복되는 클래스 함수 1</span></span><br><span class="line">        print(direction + <span class="string">"방향으로 이동합니다"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(self)</span>:</span>     <span class="comment"># 반복되는 클래스 함수 2</span></span><br><span class="line">        print(self.name + <span class="string">"이(가) 공격합니다"</span>)</span><br></pre></td></tr></table></figure><p>Character 이라는 클래스를 새로 만들고, 기사, 마법사, 궁수 클래스를 만들 때 공통적으로 포함되는 클래스 변수와 클래스 함수들을 집어 넣었다.</p><p>이제 이 부모 클래스를 사용해서 자식 클래스를 구성해 보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Knight</span><span class="params">(Character)</span>:</span>    <span class="comment"># 부모 클래스인 Character을 사용</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Archer</span><span class="params">(Character)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Wizard</span><span class="params">(Character)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">magic</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.name + <span class="string">"이(가) 마법을 사용합니다"</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>knight_user = Knight(<span class="number">20</span>, <span class="string">"Battery"</span>, <span class="number">200</span>)</span><br><span class="line">    wizard_user = Wizard(<span class="number">30</span>, <span class="string">"Bloodtrail"</span>, <span class="number">150</span>)</span><br><span class="line">    archer_user = Archer(<span class="number">15</span>, <span class="string">"CashIsK1ng"</span>, <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>knight_user.move(<span class="string">"오른쪽"</span>)</span><br><span class="line">오른쪽방향으로 이동합니다</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>wizard_user.magic()</span><br><span class="line">Bloodtrail이(가) 마법을 사용합니다</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>archer_user.attack()</span><br><span class="line">CashIsK1ng이(가) 공격합니다</span><br></pre></td></tr></table></figure><p>클래스의 상속 관계를 잘 설정해 놓으면, 이렇게 깔끔하게 코드가 완성된다.</p><p>차후 MP, 마지막으로 접속한 시간 등의 변수를 추가할 때에도 부모 클래스인 Character만 수정하면 모든 자식 클래스에 제대로 적용될 것이다.</p><p>클래스 작성에 익숙해지자!</p>]]></content>
    
    <summary type="html">
    
      파이썬에서 클래스 다루기
    
    </summary>
    
      <category term="Programming" scheme="http://jeongwookie.github.io/categories/Programming/"/>
    
      <category term="Python" scheme="http://jeongwookie.github.io/categories/Programming/Python/"/>
    
    
      <category term="파이썬" scheme="http://jeongwookie.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/"/>
    
      <category term="교육" scheme="http://jeongwookie.github.io/tags/%EA%B5%90%EC%9C%A1/"/>
    
      <category term="개발" scheme="http://jeongwookie.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="KAIST IT 프로그램" scheme="http://jeongwookie.github.io/tags/KAIST-IT-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/"/>
    
  </entry>
  
  <entry>
    <title>두 번째 숙제 - 반복문</title>
    <link href="http://jeongwookie.github.io/2018/09/21/second-homework-python/"/>
    <id>http://jeongwookie.github.io/2018/09/21/second-homework-python/</id>
    <published>2018-09-21T10:02:35.000Z</published>
    <updated>2018-09-21T10:53:31.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1번 문제 : 등차수열 형태로 별 쌓기</strong></p><p>첫 번째 문제는 *을 1개, 아래는 2개, 3개 … 이런 식으로 쌓는 것이 목적이다.</p><p>결과물은 왼쪽 정렬된 형태인 ‘계단 모양’을 띄어야 한다.</p><p>1) 이중 for문을 사용하여 출력하기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):      <span class="comment"># index : i and j</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range (i+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> j == i:</span><br><span class="line">            print(<span class="string">"*"</span>*(j+<span class="number">1</span>), end=<span class="string">"\n"</span>)    <span class="comment"># end 함수는 바로 뒤의 print에 영향을 줌</span></span><br><span class="line"></span><br><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><p>여기서 <strong>end=”\n”</strong>의 의미는, print에 의해 결과값을 출력한 후 마지막에 ‘줄바꿈’하기.</p><p><strong>end=””</strong> 이런 식으로 사용해서 print 의 결과값을 계속 붙여 나갈수도 있다.</p><p>2) 하나의 for문을 사용하여 출력하기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    print(<span class="string">"*"</span>*(k+<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><p><strong>2번 문제 : 문자열의 모든 인덱스를 리스트에 넣는 코드 만들기</strong></p><p>두 번째 문제는 원하는 문자열을 입력 받은 후, 인덱스를 찾고 싶은 문자를 입력하면 찾아주는 코드를 짜는 것이다.</p><p>예를 들어, “string”을 입력하고 “t”를 입력할 경우, 1이 출력되어야 한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">input_string = input(<span class="string">"원하는 문자열을 입력하시오 : "</span>)       <span class="comment"># 문자열 입력받기</span></span><br><span class="line">print(<span class="string">"입력한 문자열은 &#123;&#125; 입니다.\n"</span>.format(input_string))</span><br><span class="line">input_character = input(<span class="string">"인덱스 찾기를 원하는 문자를 입력하시오 : "</span>)     <span class="comment"># 문자 입력받기</span></span><br><span class="line">print(<span class="string">"입력한 문자는 &#123;&#125; 입니다.\n"</span>.format(input_character))</span><br><span class="line"></span><br><span class="line">index_lst = []      <span class="comment"># 비어 있는 인덱스 리스트 만들기</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, chr <span class="keyword">in</span> enumerate(input_string):    <span class="comment"># enumerate() 함수 사용</span></span><br><span class="line">    <span class="keyword">if</span> chr == input_character:</span><br><span class="line">        index_lst.append(i)</span><br><span class="line">print(<span class="string">"&#123;&#125;의 index는 &#123;&#125; 입니다."</span>.format(input_character, index_lst))</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>input : jeongwook</span><br><span class="line">입력한 문자열은 jeongwook 입니다.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>input : w</span><br><span class="line">입력한 문자는 w 입니다.</span><br><span class="line">w의 index는 <span class="number">5</span> 입니다.</span><br></pre></td></tr></table></figure><p>여기서 <a href="https://wikidocs.net/32#enumerate" target="_blank" rel="noopener">enumerate()</a> 함수가 사용되었다.</p><p>enumerate는 “열거하다”라는 뜻으로, 이 함수는 순서가 있는 자료형(리스트, 튜플, 문자열)을 입력으로 받아 인덱스 값을 포함하는 enumerate 객체를 리턴하게 된다.</p><p>위의 예시에서는 input_string (문자열)을 입력받아, 인덱스값 (i)와 문자 (chr)가 함께 있는 객체를 for문에 의하여 가지고 있게 되었다.</p><p>이처럼 <strong>enumerate()</strong> 함수는 주로 for문 안에서 객체의 위치를 알고 싶을 때 자주 사용한다.</p><p><strong>3번 문제 : 가운데 정렬로 별로 된 탑 쌓기</strong></p><p>세 번째 문제는 *을 1개, 3게, 5개 … 이렇게 쌓아서 가운데 정렬 후 출력하는 것이 목표이다.</p><p>1) 이중 for문을 사용하여 출력하기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5</span>-i):</span><br><span class="line">        <span class="keyword">if</span> j == (<span class="number">4</span>-i):</span><br><span class="line">            print(<span class="string">" "</span>*(j) + <span class="string">"*"</span>*(<span class="number">2</span>*i+<span class="number">1</span>) + <span class="string">" "</span>*(j))</span><br><span class="line"></span><br><span class="line">    *    </span><br><span class="line">   ***   </span><br><span class="line">  *****  </span><br><span class="line"> ******* </span><br><span class="line">*********</span><br></pre></td></tr></table></figure><p>반복문을 사용하여, 빈칸 + 별모양 + 빈칸 이런 식으로 구성 후 출력하였다.</p><p>2) 하나의 for문을 사용하여 출력하기</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">    print(<span class="string">"&#123;:^9&#125;"</span>.format(<span class="string">"*"</span>*(<span class="number">2</span>*k<span class="number">-1</span>))) <span class="comment"># 빈칸 9개에서 *을 가운데 정렬</span></span><br><span class="line"></span><br><span class="line">    *    </span><br><span class="line">   ***   </span><br><span class="line">  *****  </span><br><span class="line"> ******* </span><br><span class="line">*********</span><br></pre></td></tr></table></figure><p>여기서는 앞서 배웠던 format 함수를 사용한 ‘가운데 정렬’을 사용하였다.</p><p><strong>4번 문제 : 숫자 맞추기 게임</strong></p><p>마지막 문제는 1부터 100 사이의 숫자를 하나 랜덤하게 생성하고, 이를 맞추는 게임을 짜는 것이다.</p><p>숫자를 하나 생성하고, 그 다음 사용자가 숫자를 입력하면 이 둘을 비교하여 ‘높음’, ‘낮음’, ‘맞췄다’를 출력해야 한다.</p><p>또한, 몇 번의 guess 끝에 답을 맞췄는지 시도한 횟수를 값으로 출력해야 한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">selected_number = random.randrange(<span class="number">1</span>,<span class="number">101</span>)</span><br><span class="line">print(<span class="string">"1부터 100까지 수 중에서 랜덤하게 생성된 숫자는 &#123;&#125; 입니다.\n"</span>.format(selected_number))</span><br><span class="line"></span><br><span class="line">input_number = int(input(<span class="string">"1부터 100까지 수 중에서 하나를 선택하여 입력하시오 : "</span>))</span><br><span class="line">print(<span class="string">"입럭한 숫자는 &#123;&#125; 입니다.\n"</span>.format(input_number))</span><br><span class="line"></span><br><span class="line">trial = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    trial += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> input_number &gt; selected_number:</span><br><span class="line">        print(<span class="string">"높습니다\n"</span>)</span><br><span class="line">        input_number = int(input(<span class="string">"숫자를 다시 입력하세요 : "</span>))</span><br><span class="line">    <span class="keyword">elif</span> input_number &lt; selected_number:</span><br><span class="line">        print(<span class="string">"낮습니다\n"</span>)</span><br><span class="line">        input_number = int(input(<span class="string">"숫자를 다시 입력하세요 : "</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"맞췄습니다!\n"</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">"당신은 &#123;&#125; 번 만에 숫자를 맞췄습니다."</span>.format(trial))</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">1</span>부터 <span class="number">100</span>까지 수 중에서 랜덤하게 생성된 숫자는 <span class="number">16</span> 입니다.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">1</span>부터 <span class="number">100</span>까지 수 중에서 하나를 선택하여 입력하시오 : <span class="number">21</span></span><br><span class="line"></span><br><span class="line">입럭한 숫자는 <span class="number">21</span> 입니다.</span><br><span class="line">높습니다</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>숫자를 다시 입력하세요 : <span class="number">15</span></span><br><span class="line">낮습니다</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>숫자를 다시 입력하세요 : <span class="number">18</span></span><br><span class="line">높습니다</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>숫자를 다시 입력하세요 : <span class="number">16</span></span><br><span class="line">맞췄습니다!</span><br><span class="line"></span><br><span class="line">당신은 <span class="number">4</span> 번 만에 숫자를 맞췄습니다.</span><br></pre></td></tr></table></figure><p>여기서 하나 주목할 점은 <a href="https://wikidocs.net/79" target="_blank" rel="noopener">random 함수</a> 이다.</p><p>처음에 <strong>import random</strong>을 통해 모듈을 불러왔고, 이를 통해서 <strong>random.randrange()</strong>와 같은 함수를 사용할 수 있게 되었다.</p><p>이름에서 알 수 있듯이, 이 함수는 (x,y)를 입력하면 x이상 y미만의 범위 내에서 랜덤하게 숫자를 하나 생성하는 기능을 가진다.</p><p>모듈의 경우 다음 포스트에서 다룰 예정이다.</p><p>지금까지는 매우 쉽다! </p><p>확실히 C언어 하다가 파이썬으로 비슷한 결과물을 짜보니 난이도가 확 떨어진 게 체감이 된다 ㅋㅋ</p>]]></content>
    
    <summary type="html">
    
      Python 강의 두번째 숙제 - 반복문 다루기
    
    </summary>
    
      <category term="Programming" scheme="http://jeongwookie.github.io/categories/Programming/"/>
    
      <category term="Python" scheme="http://jeongwookie.github.io/categories/Programming/Python/"/>
    
    
      <category term="파이썬" scheme="http://jeongwookie.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/"/>
    
      <category term="교육" scheme="http://jeongwookie.github.io/tags/%EA%B5%90%EC%9C%A1/"/>
    
      <category term="개발" scheme="http://jeongwookie.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="KAIST IT 프로그램" scheme="http://jeongwookie.github.io/tags/KAIST-IT-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/"/>
    
  </entry>
  
  <entry>
    <title>건전한 소비 습관, 적금 들기</title>
    <link href="http://jeongwookie.github.io/2018/09/21/recommend-saving-account/"/>
    <id>http://jeongwookie.github.io/2018/09/21/recommend-saving-account/</id>
    <published>2018-09-21T08:53:56.000Z</published>
    <updated>2018-09-21T09:54:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>부모님께서 항상 하시는 말씀이 있다.</p><p>작은 돈을 받을 때부터 조금씩이라도 돈을 모으는 습관을 가져야 한다고.</p><p>사실 지금까지를 고백하자면, 돈을 받는 족족 쓰기만 했지 한푼도 모아본 적이 없다.</p><p>얼마 안되는 돈, 모아봤자 얼마나 모으겠냐는 부모님께서 들으시면 괘씸한(?) 심리와</p><p>나중에 월급 받으면 모으기 시작하면 되지! 하는 안일한 심리가 합쳐진 결과.</p><p><img src="https://user-images.githubusercontent.com/25416425/45871830-5d86ed80-bdc9-11e8-853c-832c87743be6.png" alt="내 이야기인가?!"></p><p>하지만 이 글을 쓰는 순간에도 내 마음속 깊은 곳에는.. 돈 쓰는 만큼 더 많이 벌면 되지! 하는 변명이 꿈틀거린다.</p><p>맞다. 내가 돈 많이 벌면, 그만큼 쓰는 것이 시장에도 도움이 된다.</p><p>건전한 소비 생활이라는 건데, 팩트는 내가 지금 돈을 벌고 있지 않은 학생이라는 거다..</p><p>이런 내가 돈을 모아야겠다는 생각이 든 건 다름 아닌 <a href="http://www.zdnet.co.kr/news/news_view.asp?artice_id=20180117180410&amp;from=Mobile" target="_blank" rel="noopener">네이버의 김정호 대표님 이야기</a> 때문이다.</p><p>대표님은 삼성에 9년 다닐 동안, 월급의 100%을 적금으로 넣었다고 한다.</p><p>대단한 소비 습관이다. 보통 사람이라면 사리가 나올 것 같은..</p><p>하지만 나는 대표님의 이야기에서 그의 절약에 대해 감동 받은 것이 아니다.</p><p>잘나가는 삼성을 때려 치고 네이버를 창업하겠다는 결단력, 그리고 힘들때 버티는 인내력이</p><p>그의 평소 소비 습관에서 나온 것 같다는 느낌이 들었기 때문이다.</p><p>결국은 앞으로 닥칠 수도 있는, 아직은 보이지 않는 위험에 대해서 자신이 할 수 있는 방법으로 똑똑하게 대처한 것이다.</p><p>창업할 때, 요즘은 지원 받을 수 있는 돈이 많다.</p><p>하지만, 작게는 법인을 세우면서 팀원들끼리 지분을 나눌때부터 위기 상황에 회사에서 돈이 나오지 않는 경우 버티는 것까지,</p><p>여윳돈은 항상 필요하다.</p><p>돈이 최고는 절대 아니지만, 돈이 없으면 괴로운 일들이 많다.</p><p>그래서 결론은! 적금을 알아보다가 우리은행에서 18년 8월 따끈따끈하게 출시한 <a href="http://biz.chosun.com/site/data/html_dir/2018/08/14/2018081400946.html" target="_blank" rel="noopener">스무살 우리 적금</a>을 발견했다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45873240-ebb0a300-bdcc-11e8-97e6-fe1303ed4bc8.jpg" alt="우리은행에서 새로 출시한 &quot;스무살 우리 적금&quot;"></p><p>평소, 적금 상품에 대해서 관심이 없어 관련 지식은 적지만</p><p>딱 봐도 최고 <strong>연 3.7% 금리 조건</strong>은 꽤나 만족스럽게 보였다.</p><p>간략히 설명하자면,</p><p>매월 지정한 금액을 입금하는 <strong>정기적금</strong>과 조금씩 내가 원하는 만큼 금액을 입금하고 중도 인출도 가능한 <strong>자율적금</strong> 이렇게 두가지가 있었다.</p><p>이름이 ‘스무살 우리 적금’ 이므로 당연히 대상자는 만 18세부터 만 30세까지.</p><p>정기와 자율 모두 기본금리 <strong>연 2.6%</strong>부터 시작해서 우리카드 월 10만원 이용 시 최고 0.5% 추가, 그리고 자동이체를 통한 납입 시 최고 0.6% 우대 금리를 받을 수 있더라.</p><p>조금 더 자세한 안내를 받으려면 <a href="https://spot.wooribank.com/pot/Dream?withyou=PODEP0021&amp;cc=c007095:c009166;c012263:c012399&amp;PLM_PDCD=P010002291&amp;PRD_CD=P010002291&amp;ALL_GB=&amp;depKind=A04" target="_blank" rel="noopener">우리은행 상품 페이지</a> 및 가까운 지점을 찾아가서 상담을 받아 보자.</p><p>나는 상담 받으러 가기는 귀찮아서 인터넷으로 후기 좀 찾아보고, 스마트폰으로 가입했다.</p><p>이미 우리은행을 사용하고 있었기 때문에, <strong>우리은행 원터치개인</strong> App이 깔려 있었고, 여기서 금융상품 -&gt; 예금/신탁을 누르면 찾을 수 있다.</p><p>내가 가입한 플랜은 <strong>정기적금</strong>으로, 1년동안 200만원 모으기 버튼을 클릭해서 연 3.5% 금리를 보장받았다.</p><p>한달에 16만 5천원을 자동이체하고, 12개월이 끝나면 대략 220만원이 조금 넘는 금액을 받는다.</p><p>또 플랜들을 보니까 욕심이 발동해서 2년동안 400만원 모으기, 3년동안 700만원 모으기에 눈길이 계속 갔지만..</p><p>처음 적금이란 것을 내 손으로 드는 거라 작게 작게 시작해 보자고 욕심을 억눌렀다..ㅋㅋ</p><p><img src="https://user-images.githubusercontent.com/25416425/45874392-b22d6700-bdcf-11e8-9656-13d41ffc0116.jpeg" alt="18년 9월 21일에 가입했으니 19년 9월 21일에 다시 보자구!"></p>]]></content>
    
    <summary type="html">
    
      우리은행에서 새로 나온 적금 들기
    
    </summary>
    
      <category term="Diary" scheme="http://jeongwookie.github.io/categories/Diary/"/>
    
      <category term="추천 아이템" scheme="http://jeongwookie.github.io/categories/Diary/%EC%B6%94%EC%B2%9C-%EC%95%84%EC%9D%B4%ED%85%9C/"/>
    
    
      <category term="일상" scheme="http://jeongwookie.github.io/tags/%EC%9D%BC%EC%83%81/"/>
    
      <category term="추천 아이템" scheme="http://jeongwookie.github.io/tags/%EC%B6%94%EC%B2%9C-%EC%95%84%EC%9D%B4%ED%85%9C/"/>
    
  </entry>
  
  <entry>
    <title>파이썬으로 함수 다루기</title>
    <link href="http://jeongwookie.github.io/2018/09/20/function-in-python/"/>
    <id>http://jeongwookie.github.io/2018/09/20/function-in-python/</id>
    <published>2018-09-19T15:25:57.000Z</published>
    <updated>2018-09-19T16:42:23.638Z</updated>
    
    <content type="html"><![CDATA[<p><strong>함수 (Function)</strong>가 무엇인지는 우리 모두 알고 있다.</p><p>함수를 사용하는 이유가 무엇일까?</p><p>기본적으로 프로그래머란 종족들은 귀찮음을 최소화 하고 어떻게든 꿀(?)을 빨려고 한다.</p><p>중복되는 코드는 절대 작성하지 않는다는 뜻.</p><p>반복되는 부분이 있을 경우, 이를 그룹화 하여 <strong>함수</strong>로 만들고, 나중에 또 쓰고 싶을 때 한줄로 해결해 버린다.</p><p>결과적으로 코드의 양이 줄어들겠지?</p><p>이러한 <strong>함수화</strong>는 프로그램의 흐름을 명확하게 하는 순기능이 있다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45764003-ad03d700-bc6c-11e8-8922-ad9146df440d.png" alt="입력값를 넣으면 함수를 거쳐 결과값이 나오는 구조"></p><p>이제 우리의 본분으로 돌아가서, 파이썬에서의 함수 사용 방법을 알아보자.</p><p>함수의 구조는 아래와 같다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> 함수이름<span class="params">(매개변수)</span>:</span></span><br><span class="line">    &lt;수행할 문장&gt;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> 결과값</span><br></pre></td></tr></table></figure><p>근데 이렇게 보면 감이 잘 안오니까 예시를 실행 해 보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum</span><span class="params">(a, b)</span>:</span>    <span class="comment"># 함수 이름은 sum이고 매개변수는 a와 b</span></span><br><span class="line">    result = a + b </span><br><span class="line">    <span class="keyword">return</span> result   <span class="comment"># 결과값 result 반환</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>value = sum(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(value)</span><br><span class="line"><span class="number">7</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>value_2 = sum(a=<span class="number">3</span>, b=<span class="number">7</span>)   <span class="comment"># 매개변수 지정</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(value_2)</span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><p>함수를 작성할 때 위와 같은 방법이 정석이지만, 매개변수 자리를 비워 놓거나 return 값 지정을 안해줘도 돌아간다.</p><p>그런데, 입력값이 몇 개가 될지 모를 때는 어떻게 해야 할까?</p><p>위의 예제는 매개변수가 a와 b이므로 입력값이 2개로 지정되어 있는데..</p><p>파이썬에서는 <strong>“*”을 이용한다.</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_sum</span><span class="params">(*args)</span>:</span>    <span class="comment"># args는 임의의 변수명</span></span><br><span class="line">       sum = <span class="number">0</span> </span><br><span class="line">       <span class="keyword">for</span> i <span class="keyword">in</span> args:   <span class="comment"># 여러 개 입력 시 tuple로 들어감</span></span><br><span class="line">           sum = sum + i </span><br><span class="line">       <span class="keyword">return</span> sum</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result = my_sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(result)</span><br><span class="line"><span class="number">15</span></span><br></pre></td></tr></table></figure><p>위의 예시처럼 변수명에 *을 붙이면 여러 개를 입력할 수 있게 된다.</p><p>지금까지는 함수의 입력값에 초점을 두었다면, 이제부터는 <strong>return</strong>에 대해서 알아보자.</p><p><u>파이썬에서 함수의 결과값은 언제나 하나이다.</u></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_sub</span><span class="params">(a,b)</span></span></span><br><span class="line"><span class="function">    <span class="title">return</span> <span class="title">a</span>+<span class="title">b</span>    # 여기서 함수가 종료됨</span></span><br><span class="line"><span class="function">    <span class="title">return</span> <span class="title">a</span>-<span class="title">b</span>    </span></span><br><span class="line"><span class="function"></span></span><br><span class="line">&gt;&gt;&gt; result = sum_sub(3,2)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(result)</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><p>즉, 함수는 <strong>return문을 만나는 순간</strong> 결과값을 반환하고 종료된다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45765956-5ea50700-bc71-11e8-8e89-101cfaa507f6.jpg" alt="함수의 결과값은 언제나 하나!"></p><p>return의 이러한 성질을 사용해서 다른 방법으로 응용이 가능하다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say_my_name</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> name == <span class="string">""</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    print(<span class="string">"제 이름은 &#123;&#125; 입니다."</span>.format(name))</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>say_my_name(<span class="string">"김정욱"</span>)</span><br><span class="line">제 이름은 김정욱 입니다.</span><br></pre></td></tr></table></figure><p>이처럼 return을 단독으로 쓰면 <u>함수를 즉시 빠져나갈 수 있다.</u></p><p>이번에는 조금 다른 형태의 입력값을 알아보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say_myself</span><span class="params">(name, old, man=True)</span>:</span> </span><br><span class="line">    print(<span class="string">"제 이름은 &#123;&#125; 입니다."</span>.format(name)) </span><br><span class="line">    print(<span class="string">"나이는 &#123;&#125; 살 입니다."</span>.format(old)) </span><br><span class="line">    <span class="keyword">if</span> man: </span><br><span class="line">        print(<span class="string">"남자입니다."</span>)</span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        print(<span class="string">"여자입니다."</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(say_myself(<span class="string">"김정욱"</span>, <span class="number">26</span>))</span><br><span class="line">제 이름은 김정욱 입니다.</span><br><span class="line">나이는 <span class="number">26</span> 살 입니다.</span><br><span class="line">남자입니다.</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(say_myself(<span class="string">"김정욱"</span>, <span class="number">26</span>, <span class="keyword">True</span>))</span><br><span class="line">제 이름은 김정욱 입니다.</span><br><span class="line">나이는 <span class="number">26</span> 살 입니다.</span><br><span class="line">남자입니다.   <span class="comment"># 위와 동일한 출력값</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; print(say_myself(<span class="string">"이하린"</span>, <span class="number">20</span>, <span class="keyword">False</span>))</span><br><span class="line">제 이름은 이하린 입니다.</span><br><span class="line">나이는 <span class="number">20</span> 살 입니다.</span><br><span class="line">여자입니다.   <span class="comment"># 매개변수 False 출력값</span></span><br></pre></td></tr></table></figure><p><strong>man=True</strong>와 같이 매개변수에 미리 값을 넣어준 경우, 따로 입력하지 않아도 자동으로 True값으로 고정된다.</p><p>그래서 두 가지 결과값이 동일하게 출력된 것이다.</p><p>man 변수에 False 값이 전달된 경우, if-else문에 의하여 출력값이 바뀌었음을 확인할 수 있다.</p><p>마지막으로, 함수 사용 시 주의할 점을 소개한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(a)</span>:</span></span><br><span class="line">    a = a +<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a)</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>자칫 하다가는 결과값이 2라고 착각할 수 있다. 왜 이럴까?</p><p>함수 밖의 변수와 함수 안의 변수가 a로 이름이 똑같아서 혼란을 발생시킨 것이다.</p><p>함수 안의 매개변수는 함수 안에서만 사용되는 <strong>함수만의 변수</strong> 임에 유의하자.</p><p>그냥 global 변수와 이름을 구별되게 지으면 문제는 해결된다..</p><p>수업 시간에 강사님께서 매우 강조하셨다.</p><p>함수는!</p><p>한 가지를 해야 한다.</p><p>그 한 가지를 잘 해야 한다.</p><p><strong>그 한 가지만을 해야 한다.</strong></p><p><img src="https://user-images.githubusercontent.com/25416425/45767575-8007f200-bc75-11e8-9d94-4db745aae989.jpg" alt="뭐 좀 많이 할려다가 다치지 맙시다"></p>]]></content>
    
    <summary type="html">
    
      파이썬에서 함수를 정의하고 다루는 법
    
    </summary>
    
      <category term="Programming" scheme="http://jeongwookie.github.io/categories/Programming/"/>
    
      <category term="Python" scheme="http://jeongwookie.github.io/categories/Programming/Python/"/>
    
    
      <category term="파이썬" scheme="http://jeongwookie.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/"/>
    
      <category term="교육" scheme="http://jeongwookie.github.io/tags/%EA%B5%90%EC%9C%A1/"/>
    
      <category term="개발" scheme="http://jeongwookie.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="KAIST IT 프로그램" scheme="http://jeongwookie.github.io/tags/KAIST-IT-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/"/>
    
  </entry>
  
  <entry>
    <title>우리 서비스의 시장 크기는 얼마나 될까?</title>
    <link href="http://jeongwookie.github.io/2018/09/18/customer-discovery-kaist-e5/"/>
    <id>http://jeongwookie.github.io/2018/09/18/customer-discovery-kaist-e5/</id>
    <published>2018-09-18T13:59:02.000Z</published>
    <updated>2018-09-19T16:48:41.277Z</updated>
    
    <content type="html"><![CDATA[<p>아닛..!!</p><p>저번주에 참여했던 KAIST E5 에서 놀랍게도 상금을 받으면서 2차 미션 대상팀이 되었다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45693115-52e51200-bb97-11e8-9cef-9fb6db86a37c.jpg" alt="띠용? 우리팀이 상금이라뇨!!"></p><p>아무래도 주제가 좋지 않았나 싶다. 아직 많이 부족하지만..</p><p>아무튼 그래서 오늘은 2차 Mission 인 <strong>Customer Discovery</strong> 강의를 들으러 KAIST 스타트업 스튜디오 1층으로 모였다.</p><p>저번 비즈니스 모델링은 카카오벤처스 <strong>김기준 상무님</strong>께서 강연해 주셨고, 이번에는 씨엔티테크 <strong>전화성 대표님</strong>께서 직접 방문하셨다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45695810-2c29da00-bb9d-11e8-9742-5bf801e04b03.png" alt="하나의 시장을 아예 씹어드신 대단한 분"></p><p>이번 2차 미션의 목표는, 1차 캠프에서 설계한 <u>우리의 비즈니스 모델이 정말 시장에서 통하는지</u> 그 가설을 검증하는 것이다.</p><p>대표님께서 처음 강연 시작 전, <strong>시장</strong>에 관하여 짧고 굵게 정의하셨는데 대단히 인상깊다.</p><blockquote><p>시장, 길게 설명할 것 없어. 나한테 돈을 주는 사람들의 집합이지.</p></blockquote><p>고객을 발견하는 일련의 과정은, 결국 내가 제시한 해결책이 효과적임을 입증하는 수단이다.</p><p>이를 세 가지 프로세스로 요약할 수 있다.</p><ol><li><p>진짜 공감되는 문제인가? (마켓의 문제를 입증하기)</p></li><li><p>내가 제시한 솔루션이 효과적인가?</p></li><li><p>1번과 2번의 결과를 보았을 때, 내가 뛰어들 마켓의 사이즈는 이정도다!</p></li></ol><p>그러면 구체적으로 위와 같은 의문을 어떻게 해결해야 할까?</p><h2 id="내가-돈-받을-사람한테-직접-가서-알아보는-수-밖에-없다"><a href="#내가-돈-받을-사람한테-직접-가서-알아보는-수-밖에-없다" class="headerlink" title="내가 돈 받을 사람한테 직접 가서 알아보는 수 밖에 없다!"></a>내가 돈 받을 사람한테 직접 가서 알아보는 수 밖에 없다!</h2><p>무엇이 힘든지, 얼마나 힘든지, 내가 이런 서비스를 만들껀데 어떤 기능이 당신에게 큰 도움이 될지 등 고객과의 <strong>Deep interwiew</strong>를 진행해야 한다.</p><p><strong>시장 규모 추정</strong>은 사업 계획서에 반드시 들어가는 항목이다.</p><p>그런데 의문이 들지 않는가?</p><p>내가 생각하는 서비스는 새로운 건데, 시장을 도데체 어떻게 숫자로 표현하라는 거지?</p><p>이를 제시하기 위한 유명한 툴이 있긴 하다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45697168-21247900-bba0-11e8-9d33-6eedcc608687.jpg" alt="TAM-SAM-SOM Approach"></p><p>TAM (Total Addressable Market)은 한국말로 <strong>전체 시장</strong>이다. 제품 및 서비스와 관련된 전체 시장의 규모를 뜻한다.</p><p>예를 들어, 모바일 APP의 경우, 국내 스마트폰 사용자 전체 <strong>4000만명</strong>이 전체 시장 규모일 수 있겠다.</p><p>SAM (Service Available Market)은 한국말로 <strong>유효 시장</strong>이다. </p><p>우리 서비스가 추구하는 비즈니스 모델이 있는 영역만을 타겟팅 한 것인데,</p><p>예를 들어 모바일 헬스케어 스타트업인 경우, 자료를 보니 전체 사용자 중 1/4가 모바일 헬스케어를 이용한다고 나와 있으므로 <strong>1000만명</strong>이다.</p><p>제일 중요한건 SOM (Serviceable Obtainable Market)인데 한국말로 <strong>수익 시장</strong>이다.</p><p>쉽게 말하면 유효 시장 안에서 우리 서비스가 초기에 노릴 수 있는 고객이 몇명인가? 에 대한 답변이다.</p><blockquote><p>누가 너의 초기 서비스에 재화를 지불할 것인가?</p></blockquote><p>위의 시장 규모 추정법에 대해 자세히 알고 싶은 사람은 <a href="https://verticalplatform.kr/archives/5494" target="_blank" rel="noopener">여기</a>를 참고하자.</p><p>나에게 대단히 도움을 많이 주고 계신 로아인벤션랩의 김진영 대표님께서 운영하시는 스타트업 관련 정보 플랫폼이다.</p><p>딱 보면 알겠지만, 결국 <strong>수익 시장을 어떻게 잡느냐</strong>가 초기 스타트업의 성패를 좌우하게 된다.</p><p>그런데, 말이 쉽지 이걸 특정하기는 대단히 어렵다..</p><p>이 때, 괜히 없는 자료 뒤적거리지 말고 사무실 밖으로 나가보면 어떨까. (어짜피 새로운 시도를 할꺼라면 자료가 없을 꺼다)</p><p><img src="https://user-images.githubusercontent.com/25416425/45697776-7f9e2700-bba1-11e8-8ab3-c94d3049883d.jpg" alt="니가 찾는 사실은 사무실에 없으니까 제발 밖에 좀 나가라!"></p><p>이 말씀을 하신 분이 바로 <a href="https://www.slideshare.net/MatthewLee/case-study-51449865" target="_blank" rel="noopener">Lean Startup</a>의 창시자, <strong>Steve Blank</strong> 선생님 되시겠다.</p><p>고객을 특정 지으려면, 먼저 고객을 만나서 <strong>진짜 그들이 겪는 문제</strong>를 들어봐야 한다.</p><p>그러니까 사업계획서에 수익 시장을 적어 넣으려면 고객을 만나야 한다는 거다.</p><p>전화성 대표님께서 말씀해 주신 프로세스가 있다. (그리고 이것이 2차 Mission 발표일에 꼭 들어가야 한다!)</p><ol><li><p>누구한테 팔껀지 가정을 하고, 그 고객한테 찾아간다.</p></li><li><p>내가 설정한 “문제”를 실제로 그들이 심각하게 겪고 있는지 검증한다.</p></li><li><p>내가 설계한 “해결책”을 제시하고, <strong>돈을 지불할 의향이 있는지 물어본다.</strong></p></li></ol><p>2번 단계에서 많은 초기 스타트업 팀은, 그들이 생각하기에 <strong>심각한 문제</strong> 였던 것이 실제로는 별 거 아님을 깨닫는다.</p><p>이 때, 내가 생각하기에 방향이 두가지 정도 있는 것 같은데</p><p>첫 번째는 이들한테 인터뷰를 하면서 <strong>진짜 심각한 문제</strong>를 새로 캐치해 내는 것.</p><p>두 번째는 내가 설정한 <strong>심각한 문제</strong>를 겪을 만한 고객을 다시 물색하는 것.</p><p>두 가지 다 해볼만 하다. 빨리빨리 움직여 봐야 할 것이다.</p><p>또 하나, 3번 단계에서 조금 주의해야 할 사항이 있다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45698810-d60c6500-bba3-11e8-8db4-e44e8f324db1.jpg" alt="환하게 웃고 계신 우리동네 음악대장님. 그런데 속마음은 어떨까? 흠"></p><p>고객들은 속마음을 이야기하지 않는다.</p><p>특히, 열심히 자신의 사업에 대해 이야기하는 사람을 앞에 두고 <strong>아 정말 쓸모없네요</strong> 라고 말하는 사람이 과연 몇이나 될까?</p><p>게다가 아는 사람들한테 물어보면 더 그렇다.</p><p>인터뷰도 스킬이다. 고객을 끄덕이는 것은 우리가 원하는 반응이 아니다.</p><p><strong>진짜 매력도를 느끼는 기능이 무엇인지</strong> 캐내야 한다.</p><p>지금 단계에서 고객들이 이야기하는 “괜찮네요” 가 당신한테 그 서비스를 구매하기 위해 돈을 지불하겠다는 것과 다름을 염두에 두자.</p><h2 id="사람들의-지갑에서-돈을-꺼내는-건-진짜로-힘든-일이다"><a href="#사람들의-지갑에서-돈을-꺼내는-건-진짜로-힘든-일이다" class="headerlink" title="사람들의 지갑에서 돈을 꺼내는 건 진짜로 힘든 일이다."></a>사람들의 지갑에서 돈을 꺼내는 건 진짜로 힘든 일이다.</h2><p>여기서 스티브 잡스 (Steve Jobs) 의 이야기를 꺼내는 사람들이 있을 수 있겠다.</p><p>잡스 형님께서 당당하게 하신 말씀.</p><blockquote><p>나는 아이폰 만들때 시장 조사를 하지 않았다. 고객들은 자신들이 원하는 게 뭔질 모르니까.</p></blockquote><p>요점은 아이폰을 만들 때 자신의 <strong>직관</strong>에 의존하였다는 것인데..</p><p>직관에 의존할 만큼 당신은, 당신이 만들 서비스가 속한 영역에 경험치가 쌓여 있는가?</p><p>스티브 잡스는 컴퓨터를 작게 만드는 데 <u>평생을 미쳐 있었다.</u></p><p>25년동안 쌓은 경험들이 그의 직관을 구성했고, 이는 보통 사람들의 생각을 아득히 뛰어넘은 것이었다.</p><p>실제로 그 사이에 애플은 많은 삽질을 했다. </p><p>그들이 만든 애플 컴퓨터는 소수의 매니아층을 만족시킬 뿐이었고, 과도한 카리스마식 경영을 하다 결국 자신이 만든 회사에서 쫓겨나기까지 하는 수모를 겪은 그다.</p><p>이 정도 경험치로 이루어진 직관에게 시장 조사 결과가 별 건가?</p><p>전화성 대표님깨서 한 마디 하셨다.</p><p><strong>“경험치를 그 정도 쌓은 분야에서 사업을 하던가, 아니면 시간을 가지고 시장 조사를 해”</strong></p><p>실제로 서비스를 오픈에서 시장에 뛰어들면, 수많은 예측하지 못했던 문제들이 튀어나온다.</p><p>그렇다면, 사업 시작 전에 충분히 주의해서 막을 수 있는 문제들은 막아야 하지 않을까?</p><p><strong>치밀하고 날카롭게 사업 하자.</strong></p><p>P.S 전화성 대표님도 <strong>운동</strong>을 대단히 강조하셨다. 사업할려면 인내심이 엄청나게 필요한데 키우는 방법은 오직 운동 뿐이라고. 열심히 하자!</p>]]></content>
    
    <summary type="html">
    
      고객 검증 후 시장 규모 추정하기
    
    </summary>
    
      <category term="Diary" scheme="http://jeongwookie.github.io/categories/Diary/"/>
    
      <category term="학교 이야기" scheme="http://jeongwookie.github.io/categories/Diary/%ED%95%99%EA%B5%90-%EC%9D%B4%EC%95%BC%EA%B8%B0/"/>
    
      <category term="창업 이야기" scheme="http://jeongwookie.github.io/categories/Diary/%EC%B0%BD%EC%97%85-%EC%9D%B4%EC%95%BC%EA%B8%B0/"/>
    
    
      <category term="일상" scheme="http://jeongwookie.github.io/tags/%EC%9D%BC%EC%83%81/"/>
    
      <category term="학교" scheme="http://jeongwookie.github.io/tags/%ED%95%99%EA%B5%90/"/>
    
      <category term="스타트업" scheme="http://jeongwookie.github.io/tags/%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85/"/>
    
      <category term="창업석사" scheme="http://jeongwookie.github.io/tags/%EC%B0%BD%EC%97%85%EC%84%9D%EC%82%AC/"/>
    
  </entry>
  
  <entry>
    <title>집합 자료형 다루기</title>
    <link href="http://jeongwookie.github.io/2018/09/18/set-in-python/"/>
    <id>http://jeongwookie.github.io/2018/09/18/set-in-python/</id>
    <published>2018-09-17T15:01:29.000Z</published>
    <updated>2018-09-17T15:43:07.353Z</updated>
    
    <content type="html"><![CDATA[<p>집합. 고등학교 수학 시작하면 가장 처음에 나오는 개념이지.</p><p><img src="https://user-images.githubusercontent.com/25416425/45632908-721d6a00-bad9-11e8-8705-2b9275d1a5d4.gif" alt="2011년 수능 이후 가장 유명한 유형 중 하나가 된 문제. 집합은 개념만 사용되었다."></p><p><strong>집합 자료형</strong>은 set()을 이용하여 생성할 수 있다.</p><p>이들의 특징은 두 가지.</p><ol><li><p>중복을 허용하지 않는다.</p></li><li><p>순서가 없다.</p></li></ol><p>1번 특징 때문에 set()을 <strong>중복 요소를 제거하기 위해</strong> 사용하기도 한다.</p><p>2번 특징은 집합 자료형을 indexing 못하게 만든다. (집합 안의 요소를 index으로 특정하지 못한다)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>set_1 = set(<span class="string">"Hello"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(set_1)</span><br><span class="line">&#123;<span class="string">'e'</span>, <span class="string">'H'</span>, <span class="string">'l'</span>, <span class="string">'o'</span>&#125;    <span class="comment">#l이 하나 중복되어서 제거됨</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list_1 = list(set_1)    <span class="comment">#set_1을 list화</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(list_1)</span><br><span class="line">[<span class="string">'H'</span>, <span class="string">'e'</span>, <span class="string">'l'</span>, <span class="string">'o'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(list_1[<span class="number">0</span>])    <span class="comment">#list이므로 indexing 가능</span></span><br><span class="line">H</span><br></pre></td></tr></table></figure><p>집합 자료형을 이용하여 교집합(&amp;), 합집합(|), 차집합(-)을 구할 수 있다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s1 = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s2 = set([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(s1 &amp; s2)    <span class="comment">#교집합 구하기</span></span><br><span class="line">&#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(s1 | s2)    <span class="comment">#합집합 구하기</span></span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(s1 - s2)    <span class="comment">#차집합 구하기</span></span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(s2 - s1)</span><br><span class="line">&#123;<span class="number">8</span>, <span class="number">9</span>, <span class="number">7</span>&#125;</span><br></pre></td></tr></table></figure><p>끗!</p>]]></content>
    
    <summary type="html">
    
      파이썬 집합 자료형 다루기
    
    </summary>
    
      <category term="Programming" scheme="http://jeongwookie.github.io/categories/Programming/"/>
    
      <category term="Python" scheme="http://jeongwookie.github.io/categories/Programming/Python/"/>
    
    
      <category term="파이썬" scheme="http://jeongwookie.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/"/>
    
      <category term="교육" scheme="http://jeongwookie.github.io/tags/%EA%B5%90%EC%9C%A1/"/>
    
      <category term="개발" scheme="http://jeongwookie.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="KAIST IT 프로그램" scheme="http://jeongwookie.github.io/tags/KAIST-IT-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/"/>
    
  </entry>
  
  <entry>
    <title>9월에 느껴지는 우울함</title>
    <link href="http://jeongwookie.github.io/2018/09/17/have-trouble-in-me/"/>
    <id>http://jeongwookie.github.io/2018/09/17/have-trouble-in-me/</id>
    <published>2018-09-17T08:32:50.000Z</published>
    <updated>2018-09-21T09:37:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>요즘 몸 상태가 그렇게 좋지 않다.</p><p>10년 동안 하루도 빠짐없이 마시던 커피를 못 마시고 있다.</p><p>어릴때부터 무언가에 집중하거나 긴장할 때, 음식을 잘 먹지 못했었는데</p><p>이제는 밥을 먹고 커피를 마시니까 바로 속이 울렁거리면서 아무것도 못한다.</p><p>몇달 전부터 점심을 먹으면 항상 속이 좋지 않았고, 그래서 많이 못 먹고 저녁에 더 많이 먹는 생활이 반복되었었다.</p><p>소화기 내과에서 받은 검진에서는 아무 문제 없었고, 아무래도 정신적인 문제가 강하게 작용하지 않았나 싶다.</p><p>하고 싶은 일이 많은데, 배우고 싶은 것도 많고..</p><p>이제 좀 충분히 쉰 것 같아 달리고 싶을 때 갑자기 안좋아져서 조금 우울하다.</p><p>인터넷으로 증상을 찾아 보니, ‘섭식장애’로 내 증상이 포괄되는 것 같다.</p><p>아주 예전부터 내가 가지고 있던 증상이었기 때문에, 가끔씩 나타날 때마다 적당히 피했었는데, 이제는 피할 수가 없나 보다.</p><p>밥만 먹었다 하면 속이 안좋아서 아무것도 못하니..</p><p>이번 해에는 내가 피해왔던 여러가지를 대면하는 시간이 필요하다.</p><p>운동에 집중하고, 마음을 편하게 가져야 하는데</p><p>그래도 갑작스럽게 찾아오는 우울함은 어쩔수 없나 보다.</p>]]></content>
    
    <summary type="html">
    
      9월에 느끼는 우울한 감정들
    
    </summary>
    
      <category term="Diary" scheme="http://jeongwookie.github.io/categories/Diary/"/>
    
      <category term="일기장" scheme="http://jeongwookie.github.io/categories/Diary/%EC%9D%BC%EA%B8%B0%EC%9E%A5/"/>
    
    
      <category term="일상" scheme="http://jeongwookie.github.io/tags/%EC%9D%BC%EC%83%81/"/>
    
      <category term="고민" scheme="http://jeongwookie.github.io/tags/%EA%B3%A0%EB%AF%BC/"/>
    
  </entry>
  
  <entry>
    <title>스타트업 팀 빌딩에 관한 생각들</title>
    <link href="http://jeongwookie.github.io/2018/09/16/team-member/"/>
    <id>http://jeongwookie.github.io/2018/09/16/team-member/</id>
    <published>2018-09-16T14:46:03.000Z</published>
    <updated>2018-09-16T16:48:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>초기 스타트업을 판단하는 기준에는 여러가지가 있다.</p><p>참신한 아이디어, 뛰어난 기술력, 풍부한 자금, 훌륭한 팀원들.. </p><p>다양한 factor 가 자신들의 사업계획서 속에 녹아 있다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45598349-93b51d80-ba15-11e8-958e-def433f65f52.jpg" alt="사업계획서의 주요 목차를 이루는 제목들"></p><p>그런데, 내가 지금까지 만났던 투자자들 하나같이 입을 모아서 1번으로 생각하는 가치가 있다면,</p><h2 id="그건-바로-팀이다"><a href="#그건-바로-팀이다" class="headerlink" title="그건 바로 팀이다."></a>그건 바로 팀이다.</h2><p>팀이 어떻게 만들어졌고, 구성원들 각각의 능력은 어떻고 등등.. 팀의 스토리를 알고 싶어한다.</p><p>왜 그러겠는가? 참신한 아이디어와 같은 것은 생각보다 뒷전이다.</p><p>심지어 어떤 유명 투자자는 이렇게 말하기도 했다.</p><p>아이디어는 솔직히 어찌 되어도 상관 없다고.. 팀만 좋으면 된다고.</p><p>조금 너무 나갔는지도 모르겠다. 하지만, 그만큼 팀 빌딩이 중요하다는 것만 알아두자.</p><p><img src="https://user-images.githubusercontent.com/25416425/45598366-d7a82280-ba15-11e8-9230-5196935d13f1.png" alt="스타트업이 망하는 이유 Top3에 들어가는 &quot;잘못된 팀 빌딩&quot;"></p><p>팀 빌딩이 중요하다는 것은 알았다 치자. 그러면 좋은 팀원은 누구이고, 어떻게 만나야 하는 걸까?</p><blockquote><p>친구랑은 사업하는 것 아니다!</p></blockquote><p><img src="https://user-images.githubusercontent.com/25416425/45598572-4f2b8100-ba19-11e8-9749-8a084dbcd73b.JPG" alt="이런 글들 많이 봤을꺼다"></p><p>앞서 이야기 하였듯이, 투자자들은 팀에 얽힌 이야기를 듣고 싶어한다.</p><p>이는 스타트업의 생존이 매우매우 어렵기 때문에, 풍파가 닥치더라도 함께 단단하게 헤쳐나갈 수 있는 결속력이 있는지 보는 것이다.</p><p>팀에 결속력이 없으면.. 조금만 상황이 어려워져도 서로 등을 돌리거나 헐뜯지 않겠는가?</p><p>브런치의 <a href="https://brunch.co.kr/@goodnerds/11" target="_blank" rel="noopener">@goodnerds</a> 님이 그리신 스타트업 만화를 봐도 대략 감이 온다.</p><p>또 하나 우리가 잘 아는 말이 있다.</p><blockquote><p>고등학교 친구가 진짜 친구다!</p></blockquote><p><img src="https://user-images.githubusercontent.com/25416425/45598497-d8da4f00-ba17-11e8-9f34-2d4cad93ca99.jpg" alt="이 친구들은 진짜지"></p><p>음.. 이 말은 대학교나 그 이후 사회 생활 하면서 만나는 사람들은 어쩔 수 없이 조건에 얽혀서 만나게 되고, 진정으로 모두가 동일한 ‘학생’일 때 허물없이 어울리는 친구가 진짜 친구다 라는 말로 들린다.</p><p>그렇다면, 나에게 결속력이 가장 강한 친구들은 힘들 때 조건 없이 달려와주는 일명 ‘고등학교 친구’ 라는 건데, 친구랑은 사업 하는 것 아니라며?</p><p>…</p><p>참 난감하다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45598600-d1b44080-ba19-11e8-86a8-4a1ba3422295.jpg" alt="일명 가불기. 격투 게임에서 유래한 가드 불가 기술의 줄임말이다."></p><p>친구랑 사업하지 말라는 것도 이해가 간다.</p><p>인정에 기대게 되고, 냉철한 판단을 내리지 못하게 한다.</p><p>결국은 사업 망하면 친구까지 따라 잃으니, 하지 말라는 것일 거다.</p><p>하지만, 나는 개인적으로 이건 옛말 같다.</p><p>스타트업은 누구보다도 고된 여정이다.</p><p><strong>코파운더(공동창업자, co-founder)</strong>는 신대륙으로 떠나는 배의 키를 잡고 선장실에서 열띤 토론을 해야 하는 선장과 그의 옛 동료들이다.</p><p>힘들 때 힘들다 말할 수 있고, 서로의 등을 맡길 수 있는 존재.</p><p>신뢰라는 것이 단시간에 생기는 것이 절대 아님을 우리는 모두 알고 있다..</p><p>너무 사견을 많이 붙였나?</p><p>스타트업 팀 빌딩은 모두가 어려워 하는 주제가 맞다.</p><p>오죽하면 좋은 팀원을 만나기 위한 플랫폼 서비스가 성행하겠는가. </p><p>많은 초기 스타트업이 고민하는 문제이고, 이를 해결하기 위한 서비스인 <a href="https://www.gofounder.net/" target="_blank" rel="noopener">고파운더</a>와 같은 플랫폼들이 있다.</p><p>내가 본 팀 빌딩은 크게 두 가지 부류였다.</p><p><strong>첫 번째</strong>는 짱짱한 사람이 사업을 진행하는데 필요한 짱짱한 사람들을 각 파트별로 모은 드림팀.</p><p><strong>두 번째</strong>는 대부분의 대학생 창업에서 이루어지는, 마음 맞는 친구들과 팀 이루기.</p><p>둘 다 성공한 케이스들이 있고, 무엇이 더 성공에 가까운지는 알 수 없다.</p><p>그런데 첫 번째의 경우 만약 내가 대표자라면, 나부터 뛰어난 능력으로 무장해야 다른 사람들을 모을 근거가 마련된다.</p><p>그리고 대학생 및 아직 졸업하지 않은 대학원생은 솔직히 말해서 능력이 없다..</p><p>그럼 답은 하나지 뭐.</p><p>능력이 조금씩 딸리더라도, 마음이 맞는 친구들.</p><p>그리고 거친 파도를 헤쳐나가며 서로에게 힘이 되어, 서로에게 성장의 원동력이 되는 친구들.</p><p>우리의 부족한 힘으로 만들어진 엉성한 스타트업을 끌어올리면서, 실력도 같이 끌어올리는 그림을 그려야지.</p><p>이쯤되면 너무 조건이 까다롭지 않냐고, 이래서 언제 창업 시작하느냐고 되물을지도 모르겠다. </p><p>단순한 직장 생활이 아니라, 창업은 삶 그 자체이기 때문에.. (수많은 야근 및 임금 없는 생활)</p><p><strong>공동창업자는 결혼 배우자를 알아보는 것과 비슷하다.</strong></p><p>쉽게 선택하지는 않겠지? 급하게 생각하지 말자. <u>창업, 쉬운 일 아니다.</u></p><p>하나 좋은 해결책이 있다.</p><p>본격적으로 창업에 나서기 전에, 학교 프로젝트이던 공모전이던 상관 없으니 무언가 노는 것 말고 일하는 걸 같이 해보자.</p><p>요즘은 창업 관련해서도 대회, 해커톤, 공모전 등 엄청 많으니까.</p><p><img src="https://user-images.githubusercontent.com/25416425/45598631-18099f80-ba1a-11e8-962e-36922eac933a.jpg" alt="필자가 작년, 초기 팀 멤버이자 친한 친구들과 함께 나갔던 정주영창업경진대회"></p><p><strong>호흡을 한번 맞춰 보고, 일이 잘 진행된다 싶으면 지르자!</strong></p><p>만약 사업이 잘 안되더라도, 값진 실패가 될 것이다.</p><p>다음 포스트에서는 작년 나의 실패 이야기를 해볼까 한다.</p><p>내가 가졌던 팀원에 대한 생각들과, 앞으로 어떤 사람과 함께할 것인지를.</p>]]></content>
    
    <summary type="html">
    
      스타트업 팀 빌딩 전반에 대한 나의 생각들
    
    </summary>
    
      <category term="Diary" scheme="http://jeongwookie.github.io/categories/Diary/"/>
    
      <category term="창업 이야기" scheme="http://jeongwookie.github.io/categories/Diary/%EC%B0%BD%EC%97%85-%EC%9D%B4%EC%95%BC%EA%B8%B0/"/>
    
    
      <category term="스타트업" scheme="http://jeongwookie.github.io/tags/%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85/"/>
    
      <category term="고민" scheme="http://jeongwookie.github.io/tags/%EA%B3%A0%EB%AF%BC/"/>
    
  </entry>
  
  <entry>
    <title>KAIST E5 학생 창업지원 프로그램</title>
    <link href="http://jeongwookie.github.io/2018/09/15/kaist-e5-startup-18f-firstmission/"/>
    <id>http://jeongwookie.github.io/2018/09/15/kaist-e5-startup-18f-firstmission/</id>
    <published>2018-09-15T06:19:23.000Z</published>
    <updated>2018-09-16T16:38:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>카이스트에는 E*5 KAIST라고 학생창업지원 프로그램이 있다.</p><p>학생창업을 위한 일종의 오디션 프로그램 같은 건데,</p><p>작년에 여러 학교의 창업 프로그램을 참가해본 결과 여기가 제일 퀄리티가 높다.</p><p>학생들의 보유 기술 수준이 높고, 오시는 심사위원 분들이 교내 프로그램 수준이 아니다.</p><p>이때까지 오신 분들을 보면 퓨처플레이, 본엔젤스, 카카오벤쳐스 등.. 유수의 엑셀러레이터 기관에서 직접 오셨다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45583389-2b264d80-b8fc-11e8-8448-9092b1b013cf.jpg" alt="이번 분기의 E*5 KAIST 모집 포스터"></p><p>선발은 크게 3단계로 이루어진다.</p><p>첫 번째는 적당한 서류평가 이후 단체로 1박 2일 캠프를 간다.</p><p>거기서 투자자분이 직접 강의하는 BM 모델링 수업을 듣고, 날밤을 새서 피피티를 만들고 발표한다.</p><p>이를 First Mission이라고 하는데, 발표의 초점은 어떤 좋은 Problem을 어떤 Customer가 겪는지, 그리고 고객들에게 어떤 Unique Value를 줄 수 있는지에만 맞춰져 있다.</p><p>즉, Solution은 크게 안본다는 소리. 보통의 사업계획서에 있는 마케팅 전략, 경쟁사 심층 분석, 자금 유치 계획, 개발 마일스톤 등은 물론 보긴 보지만 크게 문제삼지는 않는 분위기.</p><p>이 발표를 바탕으로 15팀까지 추리고, 2차 미션에 돌입하게 된다.</p><p>Second Mission은 <strong>Customer Discovery</strong> 에 초점을 크게 둔다. 첫 번째 미션 당시 발표했던 핵심 문제와, 이 문제를 앓고 있는 고객에 대해서 실제 이 분들을 만나는 것이다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45583458-915fa000-b8fd-11e8-870b-b50b72d73825.jpg" alt="고객들 입 열게 하는 것은 생각보다 어려운 일이다"></p><p>각 팀들은 고객을 심층 인터뷰 한 결과를 바탕으로 자신들이 세운 가설을 검증하고, 그 활동들을 정리하여 투자자들을 설득할 기회를 얻게 된다.</p><p>이 때, 발표를 들은 투자자 4분이 각각 자신들의 안목을 바탕으로 ‘아 이팀은 되겠다!’ 하고 키워볼 팀을 3팀씩 선발한다.</p><p>이후, Third Mission이라고 불리는 <strong>온전한 형태의 사업계획서 완성</strong>을 자신들을 뽑은 멘토 투자자와 함께 1달 동안 진행하게 된다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45583547-62e2c480-b8ff-11e8-8ce6-4063e9e05bf4.png" alt="슈퍼스타k의 기분을 조금이나마 느껴볼 수 있다"></p><p>최종 상금은 우승은 <strong>무려 1천만원.</strong> </p><p>사업비 아니고 프리하게 사용할 수 있는 금액이라 인건비로 사용할 수 있고, 막말로 그거 받아서 술 사먹어도 되는 만큼 자유로운 돈이다.</p><p>창업해 보신 분들은 알겠지만.. 사업비를 따 와도 마음대로 쓸 수가 없다 ㅠㅠ</p><p>항목도 고정되어 있고, 심지어 인건비로 한푼도 못쓰게 하는 명목만 있는 사업비도 많은데, 이런 상금들은 초기 스타트업이 생존하는데에 단비 같은 존재다.</p><p>여기까지가 프로그램 소개였고, 내가 지금 2018년도 가을학기 E*5 KAIST 첫 번째 미션 발표장에 와 있다..</p><p>과기원 창업 카톡방에서 연결된 학부생들과 팀을 맺어서, 어제 처음 만나서 아이디어 회의하고 얼른 발표 자료를 만들었다 ㅋㅋ</p><p>이미 진행하고 있는 사업이 있지만, 라이트한 느낌으로 비즈니스 모델 설계를 알려주고 싶은 친구를 같이 데려와서 알려주고 오랜만에 머리 한번 맞대는 느낌 받고 싶어서 왔다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45583657-392a9d00-b901-11e8-9f92-781a47cd5a1e.jpeg" alt="오랜만에 만난 학부때 친한 후배의 발표. 너무 사업 잘하고 있어서 자랑스럽다."></p><p>아는 사람들도 만나고, 밤을 새 가면서 치열하게 이야기하고 그러니까 머리가 다시 좀 깨는 느낌이다.</p><p>작년에는 진행했었던 사업 아이템으로 최종 미션까지 살아남았었는데, 이번에는 어떨까?</p><p>결과와 관계없이, 이런 자리에서 프레쉬한 아이디어를 듣는 것이 너무 즐겁다.</p>]]></content>
    
    <summary type="html">
    
      카이스트 학생창업지원 프로그램 소개
    
    </summary>
    
      <category term="Diary" scheme="http://jeongwookie.github.io/categories/Diary/"/>
    
      <category term="학교 이야기" scheme="http://jeongwookie.github.io/categories/Diary/%ED%95%99%EA%B5%90-%EC%9D%B4%EC%95%BC%EA%B8%B0/"/>
    
      <category term="창업 이야기" scheme="http://jeongwookie.github.io/categories/Diary/%EC%B0%BD%EC%97%85-%EC%9D%B4%EC%95%BC%EA%B8%B0/"/>
    
    
      <category term="일상" scheme="http://jeongwookie.github.io/tags/%EC%9D%BC%EC%83%81/"/>
    
      <category term="학교" scheme="http://jeongwookie.github.io/tags/%ED%95%99%EA%B5%90/"/>
    
      <category term="스타트업" scheme="http://jeongwookie.github.io/tags/%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85/"/>
    
      <category term="창업석사" scheme="http://jeongwookie.github.io/tags/%EC%B0%BD%EC%97%85%EC%84%9D%EC%82%AC/"/>
    
  </entry>
  
  <entry>
    <title>KAIST 창업석사</title>
    <link href="http://jeongwookie.github.io/2018/09/14/kschool-student/"/>
    <id>http://jeongwookie.github.io/2018/09/14/kschool-student/</id>
    <published>2018-09-14T03:49:15.000Z</published>
    <updated>2018-09-14T04:57:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>내가 다니고 있는 과정에 대해서 소개하고자 한다.</p><p>나는 현재 KAIST 기술경영학부 대학원에 다니고 있는데, 특이하게도 학위 과정이 <strong>창업융합전문석사</strong> 이다.</p><p>아직 이 전형으로 입학한 학생이 겨우 5기 뿐이고, 사람들이 잘 모르는 것 같아 간략하게나마 써본다.</p><p>일명 <strong>창업석사</strong>는 국내에서는 카이스트에서 처음 시작한 교과석사로, 미국의 유수 대학들이 시행하고 있는 것을 도입한 제도이다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45528971-c98fb180-b81d-11e8-8b63-50e42afbfb2c.jpg" alt="필자가 입학할 당시의 창업석사 포스터"></p><p>18개 정도의 학과가 공동으로 운영하므로, 학사를 졸업한 학생들은 자신이 원하는 전공을 선택하고 창업융합전문석사 트랙(Track)으로 시험 및 면접을 치루게 된다.</p><p>입학 하기 전에는 <strong>기술경영학부</strong>와 같이 이름이 창업과 유사한 학과만 사람이 바글바글 할 줄 알았는데 그건 또 아니다.</p><p>전산학부, 전기전자공학부, 기계공학부 등 major 학과의 창업석사또한 많이 있었으며 심지어 순수과학 분야인 화학과 학생도 몇 있었다.</p><p>창업석사로 진학할 것인가에 대한 판단 기준이 될만한 정보들을 내 나름대로 아래에 정리했다.</p><p><strong>첫 번째,</strong> 만약 당신이 창업을 하고 있거나, 창업을 당장 할 계획을 가지고 있다면 베스트 초이스가 아닌가 싶다.</p><p>학교 교칙 상 직장을 가지고 있는 사람은 입학 하기 전 그 관계(?)를 청산해야 한다고 쓰여 있지만, 잠깐만 다른 팀원에게 직위를 넘겨주고, 입학 후 다시 가져오면 된다.</p><p>만약 당장 창업 시기를 재고 있는 사람들은 그냥 입학 후에 곧바로 창업 하는 것이 마음 편하다.</p><p>실제로 창업석사 동기들을 보면 창업을 안한 사람이 손에 꼽을 정도이다.</p><p>모두가 다 자신이 스타트업 대표거나 코파운더 (co-founder)로써, 학교 다니면서 일도 동시에 하고 있다.</p><p><strong>두 번째,</strong> 근미래에 창업을 꿈꾸고 있다면 그것도 좋다.</p><p>일단 KAIST 라는 우리나라에서는 최고로 쳐주는 창업 선도 대학의 울타리 안으로 들어오게 된다.</p><p>퓨처플레이, 본엔젤스, 케이큐브벤쳐스, 블루포인트파트너스 등 국내 유수의 엑셀러레이터 기관의 대표 혹은 핵심 파트너들은 전부 KAIST 출신 석박사들이다.</p><p>게다가 학교에서 가만히 앉아만 있어도 방금 언급한 엑셀러레이터, 한창 성장중인 유망 스타트업들이 좋은 인재를 영입하기 위해 찾아온다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45529417-08bf0200-b820-11e8-8c64-d50b23e56488.jpeg" alt="모두가 당신을 찾아온다"></p><p>여기까지는 학교 외부에서의 혜택이고, 내부에서 직접 받는 혜택도 엄청나다.</p><p>일단, 창업지원비(?)로 매달 15만원씩 용돈이 들어온다.</p><p>그리고 <strong>스타트업빌리지</strong> 라고 학생 기숙사를 매학기 10만원에 입주할 수 있도록 해주는데, 여기가 대박이다.</p><p>3인 1실이 기본인데, 왠만한 원룸보다 시설이 훨씬 좋다.</p><p>침실(2층 침대)과 주방, 사무공간 (책상 포함), 옷장이 있는 방, 세탁기 있는 베란다 이렇게 구분된 공간이 되게 많다. 게다가 풀옵션.</p><p>여기서 모여서 창업하라는 뜻. 사업자등록장을 여기로 등록해도 된단다.</p><p>그리고 졸업하기 위해서라도 학교에서 열리는 창업 수업을 수강해야 하는데, 교수님들의 클라스가 너무 높아서 (ex. 나스닥에 상장하고 1000억에 매각한 분, 제주항공 전 CEO를 역임하신 분 등) 배울 것이 개인적으로 너무 많다.</p><p>솔직히 말해서 이런 분들과 식사하고, 관계를 다질 수 있는 기회가 그리 많지 않을 것이다.</p><p>이분들이 나서서, 대표로써 몸으로 경험하셨던 재무, 마케팅, 인사 관리 등을 알려주시는데.. 책에 있는 딱딱한 이론들 절대 아니다.</p><p>창업을 어떻게 교실에서 배우나 하고 비판하시는 분들도 있는데 나도 입학하기 전에는 그 생각에 동의했었다.</p><p><strong>세 번째,</strong> 대학원 연구실은 진짜 가기 싫고, 다른 길을 생각하는 사람은 여기도 괜찮다.</p><p>창업석사는 일반 석사와는 달리 연구실에 소속될 의무가 없다.</p><p>자신이 창업하기에 도움을 받기 위해 연구실에 소속되는 학생들도 있지만, 대부분의 학생들은 그냥 창업을 한다.</p><p>그리고 매 학기 지도교수님과 자신이 창업하였거나, 창업 하고 싶은 일에 대해서 같이 논의하고 필요에 의하면 같이 연구도 병행한다.</p><p>과학기술원 학부 출신들은 다 알겠지만, 대학원에 들어가면 졸업할 때 까지 창업의 창 자도 입밖으로 못낸다 ㅠㅠ </p><p>실제로, 몇몇 연구실에서 교수님 몰래 창업을 했다가 짤리는 경우도 보았고, 창업 수업을 (또는 부전공) 듣고 싶다고 교수님께 은근히 내비쳤더니 극대노?! 하신 교수님을 영접했다고 한다..</p><p>그런데, <strong>창업석사로 입학한 학생들은 예외다.</strong></p><p>사실 이 사람들은 연구자의 입장에서 보았을 때는 이레귤러인 것. 그래서 별로 터치를 하지 않으므로 마음껏 주변 사람을 꼬드겨서 창업하면 된다 ㅋㅋㅋ</p><p>그리고 창업에 대해서 잘 모르는 사람도 와서 배울수 있고, 주변이 전부 창업하는 사람들이니 붙어먹으면(?) 좋은 결과가 있을수도?</p><p>게다가 빡빡하게 수강한다면 1년으로도 석사 과정을 끝낼 수 있기 때문에 연구실에 흥미가 매우 없는 학생들, 특히 군필자가 아닌 (ㅠㅠ) 사람들 한테는 단비와 같은 과정임을 알 수 있다.</p><p>지금도 그렇지만 내가 입학할 당시의 자료에도 보면 석사 후 전문연구요원 편입 대상이 된다고 적혀 있다.</p><p>요즘 대체복무를 줄인다고 말이 많지만, 일단 현재만 보자면 괜찮으므로.. (이 부분이 바뀌면 추후 업데이트 하겠다. 그말은 필자도 군대에 꼼짝없이 가야한다는 건데 ㅠㅠ)</p><p>다만, 학교에 어중간한 마음으로 왔다가는 1년 금방 가서 아무것도 얻지 못할 수 있다.</p><p>내가 작년에 수많은 창업 코스를 들었지만, 여기같이 로드가 빡센 수업들은 없었다..</p><p>모든 수업들이 조별 과제를 개빡세게 한다고 하면 감이 오려나..? 학생들 수준도 물론 매우 높기 때문에 공부를 치열하게 하지 않으면 그냥 잠을 자는것과 다를 바 없을 것이다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45530540-1ecfc100-b826-11e8-8bfc-86eab560aa22.png" alt="조별과제 잔혹사 다들 아시죠? 필자는 저번 학기에 조별과제만 5개였다."></p><p>개인적으로 입학해서 얻은 것이 많아서 아직까지는 만족하면서 학교 다니고 있다.</p><p>학교에서 하는 창업 수업 + 전공 수업 + 스타트업 근무 이렇게 3 세트로 돌리는 중!</p><p>이후 포스트에서는 기술경영학부가 뭐 하는 곳이고, 나는 뭘 배우고 있는지 간단히 적어보겠다.</p><p>P.S 카이스트 창업석사에 대해 궁금하신 분은 언제든지 연락 환영합니다 :)</p><p><a href="http://news.donga.com/BestClick/3/all/20170814/85811380/1" target="_blank" rel="noopener">이 기사</a>도 참고하세요!</p>]]></content>
    
    <summary type="html">
    
      카이스트 창업석사에 대한 소개
    
    </summary>
    
      <category term="Diary" scheme="http://jeongwookie.github.io/categories/Diary/"/>
    
      <category term="학교 이야기" scheme="http://jeongwookie.github.io/categories/Diary/%ED%95%99%EA%B5%90-%EC%9D%B4%EC%95%BC%EA%B8%B0/"/>
    
    
      <category term="일상" scheme="http://jeongwookie.github.io/tags/%EC%9D%BC%EC%83%81/"/>
    
      <category term="학교" scheme="http://jeongwookie.github.io/tags/%ED%95%99%EA%B5%90/"/>
    
      <category term="창업석사" scheme="http://jeongwookie.github.io/tags/%EC%B0%BD%EC%97%85%EC%84%9D%EC%82%AC/"/>
    
  </entry>
  
  <entry>
    <title>튜플과 딕셔너리 자료형</title>
    <link href="http://jeongwookie.github.io/2018/09/14/tuple-and-dictionary/"/>
    <id>http://jeongwookie.github.io/2018/09/14/tuple-and-dictionary/</id>
    <published>2018-09-13T16:18:27.000Z</published>
    <updated>2018-09-13T17:33:55.448Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.w3schools.com/python/python_tuples.asp" target="_blank" rel="noopener">튜플(tuple)</a>은 리스트와 거의 유사하지만 다음과 같은 차이점이 있다.</p><ul><li>대괄호 []가 아닌, 소괄호 ()를 사용</li><li>리스트는 요소의 변경이 가능하지만, 튜플은 변경이 불가능 (immutable)</li></ul><p>얼핏 보면 리스트보다 튜플이 나은 점이 없어 보이는데, 왜 쓸까?</p><p>이에 대해 조교님께 물어봤는데, 튜플은 변경이 불가능하다는 속성 자체가 가치 있다고..</p><p>즉 여러 명의 개발자가 같이 프로젝트를 진행할 경우, 어떤 요소들을 튜플로 표시했을 때 다른 개발자가 보고 ‘아 이것은 변경하지 말라는 소리구나’ 라고 이해한다고 한다.</p><p>그리고 일반적인 경우에도 값이 바뀌는 상황이 걱정될 경우, 튜플을 일부러 사용하기도 한다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45502756-c49c1500-b7bf-11e8-98fa-a04e61b9cf39.gif" alt="돌이킬 수 없는 상황까지 오기 전에 튜플을 사용하자"></p><p><a href="https://www.w3schools.com/python/python_dictionaries.asp" target="_blank" rel="noopener">딕셔너리(dictionary)</a> 자료형은 대응 관계를 표시한다. </p><p>key와 value가 한 쌍이 되는데, 딕셔너리 자료형에서 값을 찾을 때는 index가 아닌 <strong>key</strong>로 이에 대응되는 값을 찾게 된다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dict = &#123;<span class="string">"name"</span> : <span class="string">"김정욱"</span>, <span class="string">"age"</span> : <span class="number">26</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(dict[<span class="string">"name"</span>])</span><br><span class="line">김정욱</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(dict[<span class="string">"age"</span>])</span><br><span class="line"><span class="number">26</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dict[<span class="string">"home"</span>] = <span class="string">"Daejeon"</span>    <span class="comment">#딕셔너리 쌍 추가하기</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(dict)</span><br><span class="line">&#123;<span class="string">"name"</span> : <span class="string">"김정욱"</span>, <span class="string">"age"</span> : <span class="number">26</span>, <span class="string">"home"</span> : <span class="string">"Daejeon"</span>&#125;</span><br></pre></td></tr></table></figure><p>딕셔너리 관련 함수들이 몇 가지 있는데, 기본적인 것만 간단하게 살펴보자.</p><p><strong>1. Key 및 Value 리스트 생성하기 (keys, values)</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = &#123;<span class="string">"name"</span> : <span class="string">"김정욱"</span>, <span class="string">"age"</span> : <span class="number">26</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a.keys())   <span class="comment">#keys() 함수 사용</span></span><br><span class="line">dict_keys([<span class="string">"name"</span>, <span class="string">"age"</span>])    <span class="comment">#dict_keys 객체 리턴</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(list(a.keys()))   <span class="comment">#list로 변환</span></span><br><span class="line">[<span class="string">"name"</span>, <span class="string">"age"</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a.values())   <span class="comment">#values() 함수 사용</span></span><br><span class="line">dict_values(<span class="string">"김정욱"</span>, <span class="number">26</span>)</span><br></pre></td></tr></table></figure></p><p><strong>2. Key 와 Value 쌍 생성하기 (items)</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = &#123;<span class="string">"name"</span> : <span class="string">"김정욱"</span>, <span class="string">"age"</span> : <span class="number">26</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a.items())    <span class="comment">#items() 함수 사용</span></span><br><span class="line">dict_items([(<span class="string">"name"</span>, <span class="string">"김정욱"</span>), (<span class="string">"age"</span>, <span class="number">26</span>)])</span><br></pre></td></tr></table></figure></p><p><strong>3. Key 와 Value 쌍 모두 지우기 (clear)</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = &#123;<span class="string">"name"</span> : <span class="string">"김정욱"</span>, <span class="string">"age"</span> : <span class="number">26</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.clear()   <span class="comment">#clear() 함수 사용</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a)</span><br><span class="line">&#123;&#125;</span><br></pre></td></tr></table></figure></p><p><strong>4. Key 로 Value 얻기 (get)</strong></p><p><a href="https://www.tutorialspoint.com/python/dictionary_get.htm" target="_blank" rel="noopener">get(x)</a> 함수는 x라는 key에 대응되는 value를 반환한다. 딕셔너리 자료형의 핵심이라고 보면 된다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = &#123;<span class="string">"name"</span> : <span class="string">"김정욱"</span>, <span class="string">"age"</span> : <span class="number">26</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a.get(<span class="string">"name"</span>))</span><br><span class="line"><span class="string">"김정욱"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a.get(<span class="string">"age"</span>))</span><br><span class="line"><span class="number">26</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a.get(<span class="string">"major"</span>))   <span class="comment">#a에 없는 key값을 넣었을 때?!</span></span><br><span class="line"><span class="keyword">None</span></span><br></pre></td></tr></table></figure><p>위 코드를 살펴보면, 현재 a라는 딕셔너리에는 key가 “name” , “age” 두 개 뿐이다.</p><p>그런데, 6번째 줄에서 “major”라는 존재하지 않는 key를 get() 함수를 이용해 지정한 경우, None을 반환한다.</p><p>이를 이용하는 대단히 휼륭한 예시가 있다.</p><p>당신에게 이름, 나이, 전공이 기록된 엑셀 파일이 있다고 하자.</p><p>하지만 이번 년도에 새로 입학하는 신입생들은 전공이 아직 없다. </p><p>위의 get() 함수를 사용하면 전공이 입력되지 않은 학생들을 “새내기”로 반환할 수 있다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = &#123;<span class="string">"name"</span> : <span class="string">"김정욱"</span>, <span class="string">"age"</span> : <span class="number">26</span>, <span class="string">"major"</span> : <span class="string">"Business"</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = &#123;<span class="string">"name"</span> : <span class="string">"이하린"</span>, <span class="string">"age"</span> : <span class="number">20</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a.get(<span class="string">"major"</span>, <span class="string">"새내기"</span>))</span><br><span class="line"><span class="string">"Business"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(b.get(<span class="string">"major"</span>, <span class="string">"새내기"</span>))</span><br><span class="line"><span class="string">"새내기"</span></span><br></pre></td></tr></table></figure><p>4번째 줄은 key가 “major”인 value, “Business”를 반환하게 한다.</p><p>그러나 6번째 줄은 <u>“major” 이라는 key가 없을 경우 “새내기” 라고 반환</u>하게 한다.</p><p><strong>5. 해당 Key가 딕셔너리 안에 있는지 조사하기 (in)</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = &#123;<span class="string">"name"</span> : <span class="string">"김정욱"</span>, <span class="string">"age"</span> : <span class="number">26</span>, <span class="string">"major"</span> : <span class="string">"Business"</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"name"</span> <span class="keyword">in</span> a</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"email"</span> <span class="keyword">in</span> a</span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      파이썬의 튜플과 딕셔너리 자료형에 대해서 다룹니다.
    
    </summary>
    
      <category term="Programming" scheme="http://jeongwookie.github.io/categories/Programming/"/>
    
      <category term="Python" scheme="http://jeongwookie.github.io/categories/Programming/Python/"/>
    
    
      <category term="파이썬" scheme="http://jeongwookie.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/"/>
    
      <category term="교육" scheme="http://jeongwookie.github.io/tags/%EA%B5%90%EC%9C%A1/"/>
    
      <category term="개발" scheme="http://jeongwookie.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="KAIST IT 프로그램" scheme="http://jeongwookie.github.io/tags/KAIST-IT-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 카테고리 이름 설정 시 문제</title>
    <link href="http://jeongwookie.github.io/2018/09/13/category-name-problem/"/>
    <id>http://jeongwookie.github.io/2018/09/13/category-name-problem/</id>
    <published>2018-09-12T17:01:42.000Z</published>
    <updated>2018-10-02T07:11:54.594Z</updated>
    
    <content type="html"><![CDATA[<p>새벽에 왠 고생이냐…</p><p>블로그 글을 정리하고 있는데, 갑자기 페이지 로딩이 안됐다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45441549-432e7f00-b6fa-11e8-9625-ffdb1c67e6d6.jpg" alt="HTML 404 ERROR 페이지. 귀엽게 그려놨는데 전혀 안귀엽다"></p><p>짜증을 뒤로 하고, 얼른 해결책부터 찾으려고 하는데 놀라운 점을 발견했다.</p><ol><li><p>카테고리 이름이 <strong>Python</strong>, <strong>Growth Hacking</strong>인 곳은 누르면 에러 발생</p></li><li><p>카테고리 이름이 <strong>Diary</strong>, <strong>Github</strong>인 곳은 문제 없이 작동</p></li></ol><p>아니 이게 무슨 상황이란 말인가?</p><p>모두 다 작동이 안된다면 뭔가 directing 문제가 발생했거니와.. 헤더 파일이나 설정 파일을 볼껀데</p><p>이건 되고 저건 안되니 어이가 없더라.</p><p>페이지 관리 도구에 들어가서 페이지 에러를 확인했더니 이런 메세지가 뜬다.</p><blockquote><p>Refused to load the font ‘<url>‘ because it violates the following Content Security Policy directive…</url></p></blockquote><blockquote><p>“default-src ‘none’”. Note that ‘font-src’ was not explicitly set, so ‘default-src’ is used as a fallback.</p></blockquote><p>뭐라고? <strong>Content Security Policy</strong> 라는 걸 어겨서 로딩이 거부되는 거라고?</p><p><img src="https://user-images.githubusercontent.com/25416425/45442114-12e7e000-b6fc-11e8-8fe1-768f1b77cf3d.jpg" alt="아직 아무것도 안했는데 벌써 뭔가를 어겼다고? ㅠㅠ"></p><p>처음에는 폰트가 어쩌구.. 하길래 폰트 로딩이 안됐나 하고 <strong>head.ejs</strong> 파일 살펴보고, <strong>_variables.styl</strong> 이랑 <strong>_config.yml</strong> 설정 파일 계속 들여다보고 이것 저것 고쳐봤는데 안됐다.</p><p>그런데 느낌이 쎄했다. 혹시 Security Policy라 그러니까 카테고리 이름에 hacking이 들어가서 블럭을 당한게 아닐까?</p><p>바로 “Growth Hacking” 이라는 카테고리 이름을  <strong>그로스 해킹</strong> 이라고 바꿨더니..</p><p>###됐다?!</p><p>그렇다면 “Python”도 모종의 이유로 블럭을 당했다고 판단, <strong>파이썬</strong>으로 고쳐 적었더니 정상 작동한다.</p><p><strong>결론 : 카테고리 이름에 “Hacking” 이나 “Python” 을 적으면 안된다네</strong></p><p>이유를 아시는 분은 알려주세요 ㅠㅠ</p>]]></content>
    
    <summary type="html">
    
      Hexo 카테고리 이름 설정 시 적용이 안되는 문제 수정
    
    </summary>
    
      <category term="Hexo" scheme="http://jeongwookie.github.io/categories/Hexo/"/>
    
    
      <category term="Github" scheme="http://jeongwookie.github.io/tags/Github/"/>
    
      <category term="블로그 issue" scheme="http://jeongwookie.github.io/tags/%EB%B8%94%EB%A1%9C%EA%B7%B8-issue/"/>
    
      <category term="Error" scheme="http://jeongwookie.github.io/tags/Error/"/>
    
      <category term="Hexo" scheme="http://jeongwookie.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>마시는 링거, 링티 후기</title>
    <link href="http://jeongwookie.github.io/2018/09/13/recommend-lingerwater/"/>
    <id>http://jeongwookie.github.io/2018/09/13/recommend-lingerwater/</id>
    <published>2018-09-12T15:15:34.000Z</published>
    <updated>2018-09-16T07:00:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>요즘따라 몸이 많이 피곤함을 느낀다.</p><p>커피를 마셔도 예전같이 빠릿빠릿하지 않고.. 격일로 운동을 간지 1달 조금 넘었는데 체력이 길러지기는 커녕 더 떨어진 것 같다.</p><p>그 와중에 <a href="https://www.wadiz.kr/web/wmain" target="_blank" rel="noopener">와디즈</a>를 보다가 무심코 발견한 아이템이 바로 <strong>마시는 링거, 링티</strong></p><p>군의관들이 개발한 것이란다. 열사병으로 쓰러지는 군인들을 위해 개발했는데, 기사를 보니 군 장성들이 그렇게 좋아한단다. 좋은 건 바로 알아보는 그들이니.. 정말 괜찮을 것 같다는 생각이 ㅋㅋㅋ</p><p>분말 형태로, 간단하게 500ml 생수만 준비해서 타먹으면 끝!</p><p><a href="https://lingerwater.com/" target="_blank" rel="noopener">공식 사이트</a>에서 주문하려고 보니까 전용 생수통을 팔던데, 예뻐 보여서 같이 샀다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45436059-d8c31200-b6ec-11e8-9fcd-98be3b3ca3ec.jpg" alt="택배 오자마자 뜯어본 링티 1 Box와 전용 생수통"></p><p>링티 1 Box에 27,000원인데 기호식품이라고 생각하면 비싼 편이지만 아플 때 링거 맞은 것처럼 힘이 난다면 이정도 돈은 충분히 지불할 용의가 있었다.</p><p>최근에 속이 많이 아파서 정밀 검진도 받고, 밥을 제대로 먹지 못했기 때문에 링티가 더 간절하게 느껴졌다. </p><p>작업하면서 바로 타서 마셔보았다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45436306-76b6dc80-b6ed-11e8-8c2f-6993a64c5f1c.jpg" alt="전용 생수통에 탄 링티. 뭔가 비쥬얼이 포카리스웨트 분말 탄 느낌?"></p><p>맛은 포카리스웨트에 레모나를 약간 탄 느낌이었다. 맛있지도, 맛없지도 않은 맛.</p><p>기분 탓인지 모르겠는데, 마시고 나니까 뭔가 너무 잠이 와서… 한숨 자고 왔다.</p><p>그런데 효과가 조금은 있다고 생각이 드는게, 오늘 밥을 아주 조금씩 먹어서 힘이 없었는데 조금씩 돌아오는 것이 느껴지더니 저녁에 운동까지 갔다와도 멀쩡하다!</p><p>아직 한번 밖에 마시지 않았지만, 첫 느낌이 좋다.</p><p>괜찮으면 부모님께도, 동생한테도 하나씩 사서 추석때 들고가야겠다.</p><p>링티 추천!!</p><p>판매 링크 : <a href="https://smartstore.naver.com/lingerwater" target="_blank" rel="noopener">https://smartstore.naver.com/lingerwater</a></p>]]></content>
    
    <summary type="html">
    
      마시는 링거, 링티(lingtea)를 마시고 난 후기
    
    </summary>
    
      <category term="Diary" scheme="http://jeongwookie.github.io/categories/Diary/"/>
    
      <category term="추천 아이템" scheme="http://jeongwookie.github.io/categories/Diary/%EC%B6%94%EC%B2%9C-%EC%95%84%EC%9D%B4%ED%85%9C/"/>
    
    
      <category term="일상" scheme="http://jeongwookie.github.io/tags/%EC%9D%BC%EC%83%81/"/>
    
      <category term="추천 아이템" scheme="http://jeongwookie.github.io/tags/%EC%B6%94%EC%B2%9C-%EC%95%84%EC%9D%B4%ED%85%9C/"/>
    
  </entry>
  
  <entry>
    <title>리스트 자료형 다루기</title>
    <link href="http://jeongwookie.github.io/2018/09/12/list-operation/"/>
    <id>http://jeongwookie.github.io/2018/09/12/list-operation/</id>
    <published>2018-09-12T04:49:03.000Z</published>
    <updated>2018-09-13T06:48:25.570Z</updated>
    
    <content type="html"><![CDATA[<p>파이썬 강의 첫 날, 또 하나의 자주 쓰는 자료형을 배웠다.</p><p><a href="https://wikidocs.net/14" target="_blank" rel="noopener">리스트 (list)</a>란 특정 값들을 <strong>순서 있게 저장</strong>하는 자료형이다.</p><p>C와는 달리, 하나의 리스트 안에 숫자와 문자가 공존할 수 있더라.</p><p>앞서 배운 문자열처럼 리스트 또한 인덱싱과 슬라이싱을 할 수 있다.</p><p>하지만, 각각의 결과물에 대해 조심해야 할 필요가 있다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lst = [<span class="string">"Python"</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(lst[<span class="number">0</span>])  <span class="comment">#lst의 첫번째 원소를 출력</span></span><br><span class="line">Python</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(lst[<span class="number">1</span>])  <span class="comment">#lst의 두번째 원소를 출력</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(lst[<span class="number">1</span>:])   <span class="comment">#lst를 두번째 부터 끝까지 슬라이싱</span></span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(lst[<span class="number">0</span>][<span class="number">0</span>])   <span class="comment">#lst의 첫번째 원소 안의 첫번째 원소</span></span><br><span class="line">P</span><br></pre></td></tr></table></figure><p>위의 결과를 보면 특이한 점이 한 가지 보인다.</p><p>바로, 리스트를 인덱싱 한 결과값은 그 자리의 원소 (숫자)인 반면</p><p><strong><u>리스트를 슬라이싱 한 결과값은 리스트로 반환되는 것이다!</u></strong></p><p>리스트의 값을 수정하거나 삭제하고 싶은 경우가 있다.</p><p>문자열의 요소값을 바꿀수 없는 것과는 달리, <strong>리스트의 값은 쉽게 바꿀 수 있다.</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>] = <span class="number">100</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">4</span>] = <span class="string">"Python"</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a)</span><br><span class="line">[<span class="number">100</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, Python]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> a[<span class="number">0</span>]    <span class="comment">#a의 첫번째 원소 삭제</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a)</span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, Python]</span><br></pre></td></tr></table></figure><p>위의 예시를 보면 알겠지만, 리스트의 요소값을 삭제하고 싶은 경우 <a href="https://wikidocs.net/14#4-del" target="_blank" rel="noopener">del 함수</a>를 사용하여 정확히 인덱싱 한 부분을 삭제할 수 있다.</p><p>리스트 또한 문자열과 마찬가지로 변수명 뒤에 ‘.’을 붙여서 관련 함수들을 사용할 수 있다. 자주 쓰이는 함수 몇 가지만 알아보자.</p><p><strong>1. 요소 추가하기 (append)</strong></p><p><a href="https://www.w3schools.com/python/ref_list_append.asp" target="_blank" rel="noopener">.append(x)</a>는 리스트의 맨 마지막에 x를 추가시키는 함수이다.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits = [<span class="string">'apple'</span>, <span class="string">'banana'</span>, <span class="string">'cherry'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits.append(<span class="string">"orange"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(fruits)</span><br><span class="line">[<span class="string">'apple'</span>, <span class="string">'banana'</span>, <span class="string">'cherry'</span>, <span class="string">'orange'</span>]</span><br></pre></td></tr></table></figure></p><p>append()를 사용할 경우 원본 data가 변형된다는 점에 주의해야 한다.</p><p><strong>2. 리스트 정렬하기 (sort)</strong></p><p><a href="https://www.w3schools.com/python/ref_list_sort.asp" target="_blank" rel="noopener">.sort()</a>는 리스트의 요소를 순서대로 정렬해 주는 함수이다.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.sort()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.sort(reverse=<span class="keyword">True</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a)</span><br><span class="line">[<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure></p><p>문자가 요소인 리스트의 경우, 기본적으로 제일 첫 글자의 순서대로 정렬해 준다. key값을 지정해 줌으로써 정렬 기준을 바꿀 수 있다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A function that returns the length of the value:</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">myFunc</span><span class="params">(e)</span>:</span></span><br><span class="line">             <span class="keyword">return</span> len(e)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cars = [<span class="string">'Ford'</span>, <span class="string">'Mitsubishi'</span>, <span class="string">'BMW'</span>, <span class="string">'VW'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cars.sort(key=myFunc)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(cars)</span><br><span class="line">[<span class="string">'VW'</span>, <span class="string">'BMW'</span>, <span class="string">'Ford'</span>, <span class="string">'Mitsubishi'</span>]</span><br></pre></td></tr></table></figure><p><strong>3. 리스트 순서 뒤집기 (reverse)</strong></p><p><a href="https://www.w3schools.com/python/ref_list_reverse.asp" target="_blank" rel="noopener">.reverse()</a>는 리스트를 역순으로 뒤집는 함수이다.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="string">'a'</span>, <span class="string">'c'</span>, <span class="string">'b'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.reverse()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a)</span><br><span class="line">[<span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'a'</span>]</span><br></pre></td></tr></table></figure></p><p><strong>4. 요소 끄집어내기 (pop)</strong></p><p><a href="https://www.w3schools.com/python/ref_list_pop.asp" target="_blank" rel="noopener">.pop(x)</a>은 리스트의 x번째 요소를 반환하고 해당 요소는 리스트에서 삭제하는 함수이다.</p><p>주로 index로 요소를 찾고, 그 값을 반환하고 리스트에서 삭제를 원할 경우 사용한다.</p><p>index로 요소를 찾고 단순히 제거를 원할 경우 <a href="https://www.w3schools.com/python/ref_keyword_del.asp" target="_blank" rel="noopener">del</a>을 사용하고,<br>index가 아닌 그 값으로 요소를 찾고 제거를 원할 경우 <a href="https://www.w3schools.com/python/ref_list_remove.asp" target="_blank" rel="noopener">remove()</a>를 사용한다.</p><p>후자의 경우 입력한 값이 리스트에 없는 경우 <em>ValueError</em>가 발생한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits = [<span class="string">'apple'</span>, <span class="string">'banana'</span>, <span class="string">'cherry'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits.pop(<span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(fruits)</span><br><span class="line">[<span class="string">'apple'</span>, <span class="string">'cherry'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a.pop())    <span class="comment">#index을 지정하지 않은 경우</span></span><br><span class="line"><span class="number">3</span>   <span class="comment">#리스트의 맨 마지막 요소를 반환</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>]</span><br></pre></td></tr></table></figure><p>위에서 소개하지 않은 나머지 리스트와 관련된 함수들은 <a href="https://wikidocs.net/14" target="_blank" rel="noopener">여기</a>를 참고하면 된다.</p><p>특히 <strong>.append()</strong> 와 <strong>.pop()</strong> 은 자주 쓰이는 함수이다.</p><p>예를 들어 data stream을 append()를 이용해서 차례대로 받고, pop()을 통해서 제일 뒤부터 차례대로 뽑아서 처리하는 식으로 쓴다고 한다.</p>]]></content>
    
    <summary type="html">
    
      Python 강의 첫날, 리스트 자료형 배운 것들
    
    </summary>
    
      <category term="Programming" scheme="http://jeongwookie.github.io/categories/Programming/"/>
    
      <category term="Python" scheme="http://jeongwookie.github.io/categories/Programming/Python/"/>
    
    
      <category term="파이썬" scheme="http://jeongwookie.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/"/>
    
      <category term="교육" scheme="http://jeongwookie.github.io/tags/%EA%B5%90%EC%9C%A1/"/>
    
      <category term="개발" scheme="http://jeongwookie.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="KAIST IT 프로그램" scheme="http://jeongwookie.github.io/tags/KAIST-IT-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/"/>
    
  </entry>
  
  <entry>
    <title>Format 함수로 정렬하기</title>
    <link href="http://jeongwookie.github.io/2018/09/11/code-alignment-using-format-function/"/>
    <id>http://jeongwookie.github.io/2018/09/11/code-alignment-using-format-function/</id>
    <published>2018-09-11T14:38:47.000Z</published>
    <updated>2018-09-13T06:47:49.596Z</updated>
    
    <content type="html"><![CDATA[<p>첫 번째 시간에 배운 <strong>Format 함수</strong>로 정렬(Alignment)을 할 수 있다.</p><p>주로 출력물을 보기 좋게 정렬하고 싶을 때 많이 사용한다고 한다.</p><table><thead><tr><th>Code</th><th>Feature</th></tr></thead><tbody><tr><td>{:k&gt;10}</td><td>10칸 공간, <strong>오른쪽 정렬</strong>, 공백을 k로 채우기</td></tr><tr><td>{:k&lt;10}</td><td>10칸 공간, <strong>왼쪽 정렬</strong>, 공백을 k로 채우기</td></tr><tr><td>{:k^10}</td><td>10칸 공간, <strong>가운데 정렬</strong>, 공백을 k로 채우기</td></tr></tbody></table><p>아래의 예시 코드를 보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 10칸 공간, 2칸에 Hi 넣고 나머지는 공백, 왼쪽 정렬</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"&#123;:&lt;10&#125; Jeongwook"</span>.format(<span class="string">"Hi"</span>))</span><br><span class="line">Hi         Jeongwook</span><br><span class="line"></span><br><span class="line"><span class="comment"># 10칸 공간, 2칸에 Hi 넣고 나머지는 공백, 오른쪽 정렬</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"&#123;:&gt;10&#125; Jeongwook"</span>.format(<span class="string">"Hi"</span>))</span><br><span class="line">        Hi Jeongwook</span><br><span class="line"></span><br><span class="line"><span class="comment"># 10칸 공간, 2칸에 Hi 넣고 나머지는 공백, 가운데 정렬</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"&#123;:^10&#125; Jeongwook"</span>.format(<span class="string">"Hi"</span>))</span><br><span class="line">    Hi     Jeongwook</span><br></pre></td></tr></table></figure><p>&lt;는 왼쪽 정렬, &gt;은 오른쪽 정렬, ^은 가운데 정렬임을 기억하자.</p><p>콜론(:) 바로 뒤에 채우고 싶은 문자나 숫자를 입력하면 된다.</p><p>아래와 같이 print 함수로 출력할때 예쁘게 구분하기 위해 사용한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 20칸 공간, 5칸에 Hello 넣고 나머지는 =으로 채움, 가운데 정렬</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"&#123;:=^20&#125;"</span>.format(<span class="string">"Hello"</span>))</span><br><span class="line">=======Hello========</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Format 함수로 정렬하는 법
    
    </summary>
    
      <category term="Programming" scheme="http://jeongwookie.github.io/categories/Programming/"/>
    
      <category term="Python" scheme="http://jeongwookie.github.io/categories/Programming/Python/"/>
    
    
      <category term="파이썬" scheme="http://jeongwookie.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/"/>
    
      <category term="교육" scheme="http://jeongwookie.github.io/tags/%EA%B5%90%EC%9C%A1/"/>
    
      <category term="개발" scheme="http://jeongwookie.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="KAIST IT 프로그램" scheme="http://jeongwookie.github.io/tags/KAIST-IT-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/"/>
    
  </entry>
  
  <entry>
    <title>첫번째 숙제</title>
    <link href="http://jeongwookie.github.io/2018/09/11/First-homework-python/"/>
    <id>http://jeongwookie.github.io/2018/09/11/First-homework-python/</id>
    <published>2018-09-11T08:27:10.000Z</published>
    <updated>2018-09-13T06:48:19.395Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1번 문제 : 슬라이싱 및 문자열 합치기</strong></p><p>첫 번째 문제는 주어진 string을 “슬라이싱” 및 “문자열 합치기”를 사용해서 주어진 format으로 만드는 것이다.</p><p>“20180108”을 “2018년 01월 08일”로 바꾸어 출력해 보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="string">"20180108"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>year = a[:<span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>month = a[<span class="number">4</span>:<span class="number">6</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>date = a[<span class="number">6</span>:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>date_format = <span class="string">"&#123;&#125;년 &#123;&#125;월 &#123;&#125;일"</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(date_format.format(year, month, date))</span><br><span class="line"><span class="number">2018</span>년 <span class="number">01</span>월 <span class="number">08</span>일</span><br></pre></td></tr></table></figure><p><strong>2번 문제 : 나누기 및 나머지 구하기를 활용한 1번 문제 풀이</strong></p><p>두 번째 문제는 1번 문제와 동일한 결과물을 “나누기” 및 “나머지 구하기”를 활용하여 출력하는 것이다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">20180108</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>year = int(a/<span class="number">10000</span>)     <span class="comment">#int로 정수화</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>month = int((a%<span class="number">10000</span>)/<span class="number">100</span>)      <span class="comment">#int로 정수화</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>date = (a%<span class="number">10000</span>)%<span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"&#123;0&#125;년 &#123;3&#125;&#123;1&#125;월 &#123;3&#125;&#123;2&#125;일"</span>.format(year, month, date, <span class="number">0</span>))</span><br><span class="line"><span class="number">2018</span>년 <span class="number">01</span>월 <span class="number">08</span>일</span><br></pre></td></tr></table></figure><p>다른 방법도 있을텐데 그냥 0 자리를 만들고 그대로 format 함수 사용해서 채워넣었다.</p><p><strong>3번 문제 : 슬라이싱 및 문자열 합치기</strong></p><p>세 번째 문제는 주어진 문자열의 문자를 “슬라이싱” 및 “문자열 합치기”를 활용하여 바꾸는 것이다.</p><p>“Hi Jeongwook” 을 “Hello Jeongwook” 으로 바꾸어 보자.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="string">"Hi Jeongwook"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>say_hello = <span class="string">"Hello "</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result_statement = say_hello + b[<span class="number">3</span>:]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(result_statement)</span><br><span class="line"><span class="string">"Hello Jeongwook"</span></span><br></pre></td></tr></table></figure><p><strong>4번 문제 : 원하는 문자를 Upper letter로 바꾸어 보기</strong></p><p>네 번째 문제는 문자열을 입력 받은 후 첫 번째 문자와 마지막 문자만 대문자로 바꾸어 출력하는 것이다.</p><p>입력 받은 문자열을 슬라이싱 후 원하는 부분만 <a href="https://www.tutorialspoint.com/python/string_upper.htm" target="_blank" rel="noopener">upper()</a>을 적용한 후 다시 합치면 된다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>input_statement = input()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>first_letter = input_statement[<span class="number">0</span>].upper()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>last_letter = input_statement[<span class="number">-1</span>].upper()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>middle_letter = input_statement[<span class="number">1</span>:<span class="number">-1</span>].lower()</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>output_statement = first_letter + middle_letter + last_letter</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(output_statement)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Python 강의 첫번째 숙제 - 문자열 다루기
    
    </summary>
    
      <category term="Programming" scheme="http://jeongwookie.github.io/categories/Programming/"/>
    
      <category term="Python" scheme="http://jeongwookie.github.io/categories/Programming/Python/"/>
    
    
      <category term="파이썬" scheme="http://jeongwookie.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/"/>
    
      <category term="교육" scheme="http://jeongwookie.github.io/tags/%EA%B5%90%EC%9C%A1/"/>
    
      <category term="개발" scheme="http://jeongwookie.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="KAIST IT 프로그램" scheme="http://jeongwookie.github.io/tags/KAIST-IT-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/"/>
    
  </entry>
  
  <entry>
    <title>문자열 자료형 다루기</title>
    <link href="http://jeongwookie.github.io/2018/09/10/Common-string-operation/"/>
    <id>http://jeongwookie.github.io/2018/09/10/Common-string-operation/</id>
    <published>2018-09-10T14:30:06.000Z</published>
    <updated>2018-09-13T06:48:13.268Z</updated>
    
    <content type="html"><![CDATA[<p>첫번째 강의 시간에 배운 내용 중 주목해야 할 점은 <strong>format</strong>의 쓰임이었다.</p><p>예전에 C로 코딩할때는 %d, %f 등을 잘 찍어줘야 하는데, 파이썬은 그런게 없어도 잘되네?</p><p>기본적인 포맷은 아래와 같다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'&#123;&#125; &#123;&#125;'</span>.format(<span class="string">'one'</span>, <span class="string">'two'</span>)</span><br></pre></td></tr></table></figure><p>이렇게 치면 결과값이 “one two”로 나온다. (string)</p><p>내가 앞에서 순서를 지정할 수도 있다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'&#123;1&#125; &#123;0&#125;'</span>.format(<span class="string">'one'</span>, <span class="string">'two'</span>)</span><br></pre></td></tr></table></figure><p>결과값은 “two one” 이다.</p><p>자세한 내용은 <a href="https://pyformat.info/" target="_blank" rel="noopener">PyFormat</a>에서 확인할 수 있다.</p><p>이외에도 주로 <strong>문자열 자료형</strong>에 대해서 다루었다. 내용을 간단히 열거하면 아래와 같다.</p><ol><li><strong>문자열 더하기 및 곱하기</strong><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="string">"I love "</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="string">"Python!"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a+b)</span><br><span class="line"><span class="string">"I love Python!"</span></span><br></pre></td></tr></table></figure></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"="</span> * <span class="number">20</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"Python is god"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"="</span> * <span class="number">20</span>)</span><br><span class="line">====================</span><br><span class="line"><span class="string">"Python is god"</span></span><br><span class="line">====================</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>문자열 인덱싱</strong></li></ol><p>문자열 인덱싱이란, 말그대로 문자열에서 문자들에게 순서를 숫자로 매기는(indexing) 것이다.<br><strong>“파이썬은 0부터 숫자를 센다”</strong> 라는 사실만 주의하자.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>string = <span class="string">"Python"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string[<span class="number">0</span>]</span><br><span class="line"><span class="string">'P'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string[<span class="number">3</span>]</span><br><span class="line"><span class="string">'h'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string[<span class="number">-1</span>]</span><br><span class="line"><span class="string">'n'</span></span><br></pre></td></tr></table></figure></p><ol start="3"><li><strong>문자열 슬라이싱</strong></li></ol><p>문자열 슬라이싱이란, 주어진 문자열을 자르는 (slicing) 것이다. 내가 원하는 만큼 범위를 지정하면 딱 그만큼 잘라서 준다. 단, 범위를 지정할 때 <strong>끝은 포함하지 않음</strong>에 주의하자.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>string = <span class="string">"Python is king"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string[<span class="number">0</span>:<span class="number">7</span>]</span><br><span class="line"><span class="string">'Python'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string[<span class="number">7</span>:]</span><br><span class="line"><span class="string">' is king'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string[:]</span><br><span class="line"><span class="string">'Python is king'</span></span><br></pre></td></tr></table></figure></p><p>문자열 슬라이싱은 주어진 문자열을 수정하고 싶을 때 유용하게 사용할 수 있다.<br>문자열의 요소값은 바꿀 수 있는 값이 아니기 때문에 (immutable: 불변의) 문자열 슬라이싱 후 더하는 방법을 사용한다.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 예시: "Pithon" 을 "Python"으로 바꾸고 싶다!</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="string">"Pithon"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[:<span class="number">1</span>]</span><br><span class="line"><span class="string">'P'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">2</span>:]</span><br><span class="line"><span class="string">'thon'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[:<span class="number">1</span>] + <span class="string">'y'</span> + a[<span class="number">2</span>:]</span><br><span class="line"><span class="string">'Python'</span></span><br></pre></td></tr></table></figure></p><ol start="4"><li><strong>문자열 관련 함수들</strong></li></ol><p>자주 쓰이는 함수는, </p><ul><li><a href="https://www.programiz.com/python-programming/methods/string/find" target="_blank" rel="noopener">find</a> (인덱스 알려주기)</li><li><a href="https://www.programiz.com/python-programming/methods/string/strip" target="_blank" rel="noopener">strip</a> (공백 지우기)</li><li><a href="https://www.programiz.com/python-programming/methods/string/replace" target="_blank" rel="noopener">replace</a> (문자열 바꾸기)</li><li><a href="https://www.programiz.com/python-programming/methods/string/split" target="_blank" rel="noopener">split</a> (문자열 나누기)</li></ul><p>등이 있다.</p><p>자세한 내용은 <a href="https://wikidocs.net/13#_11" target="_blank" rel="noopener">점프투 파이썬 위키</a>를 참고하자.</p>]]></content>
    
    <summary type="html">
    
      Python 강의 첫날, 문자열 자료형 배운 것들
    
    </summary>
    
      <category term="Programming" scheme="http://jeongwookie.github.io/categories/Programming/"/>
    
      <category term="Python" scheme="http://jeongwookie.github.io/categories/Programming/Python/"/>
    
    
      <category term="파이썬" scheme="http://jeongwookie.github.io/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC/"/>
    
      <category term="교육" scheme="http://jeongwookie.github.io/tags/%EA%B5%90%EC%9C%A1/"/>
    
      <category term="개발" scheme="http://jeongwookie.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="KAIST IT 프로그램" scheme="http://jeongwookie.github.io/tags/KAIST-IT-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 블로그에 이미지 업로드하기</title>
    <link href="http://jeongwookie.github.io/2018/09/10/Github-Blog-image-upload/"/>
    <id>http://jeongwookie.github.io/2018/09/10/Github-Blog-image-upload/</id>
    <published>2018-09-10T13:46:48.000Z</published>
    <updated>2018-10-02T05:22:03.123Z</updated>
    
    <content type="html"><![CDATA[<p>Github를 사용해서 블로그를 시작하려는데, 문제가 생겼다.</p><blockquote><p>왜 이미지 업로드가 안되지?</p></blockquote><p>분명히 source를 확인하고, deploy_git에 정상적으로 image가 업로드 되었음에도, 내 페이지는 그대로..</p><p>이것저것 해보다가 다시 블로그를 새로고침했더니, 정상적으로 image가 올라가 있었다 -_-</p><p>내 짧은 지식과 검색으로 다음과 같은 결론을 얻었다.</p><ol><li>Github를 이용해서 블로그를 호스팅할 경우, 전송 속도가 매우 느려서 업로드 되는데 시간이 좀 걸린다. (약 3~4분)</li><li>되긴 되지만 답답하다. 다른 방법 없나?</li></ol><p>구글링을 열심히 해보니, 놀랍게도 GitHub Help에서 issue로 등록해 놨더라.</p><p><a href="https://help.github.com/articles/file-attachments-on-issues-and-pull-requests/" title="깃허브 페이지에 이미지 업로드하기" target="_blank" rel="noopener">File attachments on issues and pull requests</a></p><p><img src="https://user-images.githubusercontent.com/25416425/45302205-a5964c80-b54d-11e8-8acb-170bf3e854f7.gif" alt="네모에다가 원하는 이미지를 드래그 앤 드랍 해보자"></p><p>위에 나와있는 움짤처럼 이미지를 끌어다가 네모에 넣고 기다리면, 이미지 링크가 생긴다.</p><p>이를 원하는 페이지에 붙여넣으면 끝!</p>]]></content>
    
    <summary type="html">
    
      Hexo 블로그에 이미지 업로드하기
    
    </summary>
    
      <category term="Hexo" scheme="http://jeongwookie.github.io/categories/Hexo/"/>
    
    
      <category term="Github" scheme="http://jeongwookie.github.io/tags/Github/"/>
    
      <category term="블로그 issue" scheme="http://jeongwookie.github.io/tags/%EB%B8%94%EB%A1%9C%EA%B7%B8-issue/"/>
    
      <category term="Error" scheme="http://jeongwookie.github.io/tags/Error/"/>
    
      <category term="Hexo" scheme="http://jeongwookie.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
