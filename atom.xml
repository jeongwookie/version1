<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jeongwook, IT Blog</title>
  
  <subtitle>금성에서 온 기획자, 화성의 언어를 시작하다</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jeongwookie.github.io/"/>
  <updated>2018-09-11T13:44:59.806Z</updated>
  <id>http://jeongwookie.github.io/</id>
  
  <author>
    <name>Jeongwook, Kim</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>첫번째 숙제</title>
    <link href="http://jeongwookie.github.io/2018/09/11/first%20homework%20python/"/>
    <id>http://jeongwookie.github.io/2018/09/11/first homework python/</id>
    <published>2018-09-11T08:27:10.000Z</published>
    <updated>2018-09-11T13:44:59.806Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1번 문제 : 슬라이싱 및 문자열 합치기</strong></p><p>첫 번째 문제는 주어진 string을 “슬라이싱” 및 “문자열 합치기”를 사용해서 주어진 format으로 만드는 것이다.</p><p>“20180108”을 “2018년 01월 08일”로 바꾸어 출력해 보자.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = &quot;20180108&quot;</span><br><span class="line">&gt;&gt;&gt; year = a[:4]</span><br><span class="line">&gt;&gt;&gt; month = a[4:6]</span><br><span class="line">&gt;&gt;&gt; date = a[6:]</span><br><span class="line">&gt;&gt;&gt; date_format = &quot;&#123;&#125;년 &#123;&#125;월 &#123;&#125;일&quot;</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(date_format.format(year, month, date))</span><br><span class="line">2018년 01월 08일</span><br></pre></td></tr></table></figure><p><strong>2번 문제 : 나누기 및 나머지 구하기를 활용한 1번 문제 풀이*</strong></p><p>두 번째 문제는 1번 문제와 동일한 결과물을 “나누기” 및 “나머지 구하기”를 활용하여 출력하는 것이다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = 20180108</span><br><span class="line">&gt;&gt;&gt; year = int(a/10000)     #int로 정수화</span><br><span class="line">&gt;&gt;&gt; month = int((a%10000)/100)      #int로 정수화</span><br><span class="line">&gt;&gt;&gt; date = (a%10000)%100</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(&quot;&#123;0&#125;년 &#123;3&#125;&#123;1&#125;월 &#123;3&#125;&#123;2&#125;일&quot;.format(year, month, date, 0))</span><br><span class="line">2018년 01월 08일</span><br></pre></td></tr></table></figure><p>다른 방법도 있을텐데 그냥 0 자리를 만들고 그대로 format 함수 사용해서 채워넣었다.</p><p><strong>3번 문제 : 슬라이싱 및 문자열 합치기</strong></p><p>세 번째 문제는 주어진 문자열의 문자를 “슬라이싱” 및 “문자열 합치기”를 활용하여 바꾸는 것이다.</p><p>“Hi Jeongwook” 을 “Hello Jeongwook” 으로 바꾸어 보자.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; b = &quot;Hi Jeongwook&quot;</span><br><span class="line">&gt;&gt;&gt; say_hello = &quot;Hello &quot;</span><br><span class="line">&gt;&gt;&gt; result_statement = say_hello + b[3:]</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(result_statement)</span><br><span class="line">&quot;Hello Jeongwook&quot;</span><br></pre></td></tr></table></figure><p><strong>4번 문제 : 원하는 문자를 Upper letter로 바꾸어 보기*</strong></p><p>네 번째 문제는 문자열을 입력 받은 후 첫 번째 문자와 마지막 문자만 대문자로 바꾸어 출력하는 것이다.</p><p>입력 받은 문자열을 슬라이싱 후 원하는 부분만 <a href="https://www.tutorialspoint.com/python/string_upper.htm" target="_blank" rel="noopener">upper()</a>을 적용한 후 다시 합치면 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; input_statement = input()</span><br><span class="line">&gt;&gt;&gt; first_letter = input_statement[0].upper()</span><br><span class="line">&gt;&gt;&gt; last_letter = input_statement[-1].upper()</span><br><span class="line">&gt;&gt;&gt; middle_letter = input_statement[1:-1].lower()</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; output_statement = first_letter + middle_letter + last_letter</span><br><span class="line">&gt;&gt;&gt; print(output_statement)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Python 강의 첫번째 숙제 - 문자열 다루기
    
    </summary>
    
      <category term="Python" scheme="http://jeongwookie.github.io/categories/Python/"/>
    
      <category term="KAIST IT 강좌" scheme="http://jeongwookie.github.io/categories/Python/KAIST-IT-%EA%B0%95%EC%A2%8C/"/>
    
    
      <category term="개발" scheme="http://jeongwookie.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="Python" scheme="http://jeongwookie.github.io/tags/Python/"/>
    
      <category term="교육" scheme="http://jeongwookie.github.io/tags/%EA%B5%90%EC%9C%A1/"/>
    
      <category term="KAIST" scheme="http://jeongwookie.github.io/tags/KAIST/"/>
    
  </entry>
  
  <entry>
    <title>문자열 자료형 다루기</title>
    <link href="http://jeongwookie.github.io/2018/09/10/Common%20string%20operation/"/>
    <id>http://jeongwookie.github.io/2018/09/10/Common string operation/</id>
    <published>2018-09-10T14:30:06.000Z</published>
    <updated>2018-09-11T13:44:25.382Z</updated>
    
    <content type="html"><![CDATA[<p>첫번째 강의 시간에 배운 내용 중 주목해야 할 점은 <strong>format</strong>의 쓰임이었다.</p><p>예전에 C로 코딩할때는 %d, %f 등을 잘 찍어줘야 하는데, 파이썬은 그런게 없어도 잘되네?</p><p>기본적인 포맷은 아래와 같다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;&#123;&#125; &#123;&#125;&apos;.format(&apos;one&apos;, &apos;two&apos;)</span><br></pre></td></tr></table></figure><p>이렇게 치면 결과값이 “one two”로 나온다. (string)</p><p>내가 앞에서 순서를 지정할 수도 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;&#123;1&#125; &#123;0&#125;&apos;.format(&apos;one&apos;, &apos;two&apos;)</span><br></pre></td></tr></table></figure><p>결과값은 “two one” 이다.</p><p>자세한 내용은 <a href="https://pyformat.info/" target="_blank" rel="noopener">PyFormat</a>에서 확인할 수 있다.</p><p>이외에도 주로 <strong>문자열 자료형</strong>에 대해서 다루었다. 내용을 간단히 열거하면 아래와 같다.</p><ol><li><strong>문자열 더하기 및 곱하기</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = &quot;I love &quot;</span><br><span class="line">&gt;&gt;&gt; b = &quot;Python!&quot;</span><br><span class="line">&gt;&gt;&gt; print(a+b)</span><br><span class="line">&quot;I love Python!&quot;</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; print(&quot;=&quot; * 20)</span><br><span class="line">&gt;&gt;&gt; print(&quot;Python is god&quot;)</span><br><span class="line">&gt;&gt;&gt; print(&quot;=&quot; * 20)</span><br><span class="line">====================</span><br><span class="line">&quot;Python is god&quot;</span><br><span class="line">====================</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>문자열 인덱싱</strong></li></ol><p>문자열 인덱싱이란, 말그대로 문자열에서 문자들에게 순서를 숫자로 매기는(indexing) 것이다.<br><strong>“파이썬은 0부터 숫자를 센다”</strong> 라는 사실만 주의하자.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; string = &quot;Python&quot;</span><br><span class="line">&gt;&gt;&gt; string[0]</span><br><span class="line">&apos;P&apos;</span><br><span class="line">&gt;&gt;&gt; string[3]</span><br><span class="line">&apos;h&apos;</span><br><span class="line">&gt;&gt;&gt; string[-1]</span><br><span class="line">&apos;n&apos;</span><br></pre></td></tr></table></figure></p><ol start="3"><li><strong>문자열 슬라이싱</strong></li></ol><p>문자열 슬라이싱이란, 주어진 문자열을 자르는 (slicing) 것이다. 내가 원하는 만큼 범위를 지정하면 딱 그만큼 잘라서 준다. 단, 범위를 지정할 때 <strong>끝은 포함하지 않음</strong>에 주의하자.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; string = &quot;Python is king&quot;</span><br><span class="line">&gt;&gt;&gt; string[0:7]</span><br><span class="line">&apos;Python&apos;</span><br><span class="line">&gt;&gt;&gt; string[7:]</span><br><span class="line">&apos; is king&apos;</span><br><span class="line">&gt;&gt;&gt; string[:]</span><br><span class="line">&apos;Python is king&apos;</span><br></pre></td></tr></table></figure></p><p>문자열 슬라이싱은 주어진 문자열을 수정하고 싶을 때 유용하게 사용할 수 있다.<br>문자열의 요소값은 바꿀 수 있는 값이 아니기 때문에 (immutable: 불변의) 문자열 슬라이싱 후 더하는 방법을 사용한다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 예시: &quot;Pithon&quot; 을 &quot;Python&quot;으로 바꾸고 싶다!</span><br><span class="line">&gt;&gt;&gt; a = &quot;Pithon&quot;</span><br><span class="line">&gt;&gt;&gt; a[:1]</span><br><span class="line">&apos;P&apos;</span><br><span class="line">&gt;&gt;&gt; a[2:]</span><br><span class="line">&apos;thon&apos;</span><br><span class="line">&gt;&gt;&gt; a[:1] + &apos;y&apos; + a[2:]</span><br><span class="line">&apos;Python&apos;</span><br></pre></td></tr></table></figure></p><ol start="4"><li><strong>문자열 관련 함수들</strong></li></ol><p>자주 쓰이는 함수는, </p><ul><li><a href="https://www.programiz.com/python-programming/methods/string/find" target="_blank" rel="noopener">find</a> (인덱스 알려주기)</li><li><a href="https://www.programiz.com/python-programming/methods/string/strip" target="_blank" rel="noopener">strip</a> (공백 지우기)</li><li><a href="https://www.programiz.com/python-programming/methods/string/replace" target="_blank" rel="noopener">replace</a> (문자열 바꾸기)</li><li><a href="https://www.programiz.com/python-programming/methods/string/split" target="_blank" rel="noopener">split</a> (문자열 나누기)</li></ul><p>등이 있다.</p><p>자세한 내용은 <a href="https://wikidocs.net/13#_11" target="_blank" rel="noopener">점프투 파이썬 위키</a>를 참고하자.</p>]]></content>
    
    <summary type="html">
    
      Python 강의 첫날 배운 여러가지
    
    </summary>
    
      <category term="Python" scheme="http://jeongwookie.github.io/categories/Python/"/>
    
      <category term="KAIST IT 강좌" scheme="http://jeongwookie.github.io/categories/Python/KAIST-IT-%EA%B0%95%EC%A2%8C/"/>
    
    
      <category term="Python" scheme="http://jeongwookie.github.io/tags/Python/"/>
    
      <category term="교육" scheme="http://jeongwookie.github.io/tags/%EA%B5%90%EC%9C%A1/"/>
    
      <category term="KAIST" scheme="http://jeongwookie.github.io/tags/KAIST/"/>
    
  </entry>
  
  <entry>
    <title>Github 블로그에 이미지 업로드하기</title>
    <link href="http://jeongwookie.github.io/2018/09/10/Github%20Blog%20image%20upload/"/>
    <id>http://jeongwookie.github.io/2018/09/10/Github Blog image upload/</id>
    <published>2018-09-10T13:46:48.000Z</published>
    <updated>2018-09-11T13:44:19.172Z</updated>
    
    <content type="html"><![CDATA[<p>Github를 사용해서 블로그를 시작하려는데, 문제가 생겼다.</p><blockquote><p>왜 이미지 업로드가 안되지?</p></blockquote><p>분명히 source를 확인하고, deploy_git에 정상적으로 image가 업로드 되었음에도, 내 페이지는 그대로..</p><p>이것저것 해보다가 다시 블로그를 새로고침했더니, 정상적으로 image가 올라가 있었다 -_-</p><p>내 짧은 지식과 검색으로 다음과 같은 결론을 얻었다.</p><ol><li>Github를 이용해서 블로그를 호스팅할 경우, 전송 속도가 매우 느려서 업로드 되는데 시간이 좀 걸린다. (약 3~4분)</li><li>되긴 되지만 답답하다. 다른 방법 없나?</li></ol><p>구글링을 열심히 해보니, 놀랍게도 GitHub Help에서 issue로 등록해 놨더라.</p><p><a href="https://help.github.com/articles/file-attachments-on-issues-and-pull-requests/" title="깃허브 페이지에 이미지 업로드하기" target="_blank" rel="noopener">File attachments on issues and pull requests</a></p><p><img src="https://user-images.githubusercontent.com/25416425/45302205-a5964c80-b54d-11e8-8acb-170bf3e854f7.gif" alt="네모에다가 원하는 이미지를 드래그 앤 드랍 해보자"></p><p>위에 나와있는 움짤처럼 이미지를 끌어다가 네모에 넣고 기다리면, 이미지 링크가 생긴다.</p><p>이를 원하는 페이지에 붙여넣으면 끝!</p>]]></content>
    
    <summary type="html">
    
      깃허브 블로그에 이미지 업로드하기
    
    </summary>
    
      <category term="Github" scheme="http://jeongwookie.github.io/categories/Github/"/>
    
    
      <category term="Giuhub" scheme="http://jeongwookie.github.io/tags/Giuhub/"/>
    
      <category term="블로그" scheme="http://jeongwookie.github.io/tags/%EB%B8%94%EB%A1%9C%EA%B7%B8/"/>
    
      <category term="개발" scheme="http://jeongwookie.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
  </entry>
  
  <entry>
    <title>파이썬 시작하기</title>
    <link href="http://jeongwookie.github.io/2018/09/10/Start%20learning%20python/"/>
    <id>http://jeongwookie.github.io/2018/09/10/Start learning python/</id>
    <published>2018-09-10T12:47:29.000Z</published>
    <updated>2018-09-11T13:44:46.112Z</updated>
    
    <content type="html"><![CDATA[<p> 학교에서 주말마다 하는 IT 교육과정이 있다.</p><p><img src="https://user-images.githubusercontent.com/25416425/45299472-b2637200-b546-11e8-8c45-424f3bf4a097.png" alt="KAIST IT 아카데미 교육과정"></p><p> 예전부터 파이썬을 혼자서 해보겠다고 책도 빌리고, 코드아카데미에서 몇번 끄젹여 봤었는데 시간이 잘 안나기도 하고 막상 시간이 나면 안했다..</p><p> 학부때 잠깐 EECS의 데이터마이닝 랩에서 근무 했었는데, 그때는 R을 써서 데이터를 읽어오고 간단하게 ANNOVAR 돌려보고 그랬다. C에 비해서는 대단히 직관적인 언어여서 금방금방 따라하긴 했는데 지금은 어떨까?</p><p> 파이썬과 R이 <strong>Data Science</strong> 하면 제일 많이 떠오르는 언어라고 하는데, 예전보다 파이썬의 위상이 하늘을 찌를 정도로 올라가서.. 이제는 파이썬이 아무튼 대세다.</p><p> 개인적으로 개발에 관심을 두기 전에도 대단히 잡다한 지식을 모으는 데에 관심이 있어서, 학부에서 화학을 전공하면서도 현대대수학과 같은 수학과 과목이랑, 양자역학, 세포생물학 및 세포물리학 등등 여기저기 돌아다녔다.</p><p> 인문 수업들도 꽤나 들었고, 다양한 과목들을 수강하면서 놀라웠던 점은 <strong>하나의 현상을 보고, 이를 분석하는 방법이 너무너무 달랐다는 것이다.</strong></p><p> 예를 들어서, 수소의 오비탈을 수식으로 풀어내는 과정에 있어서 양자역학을 배울 때에는 수학적인 정의와 함께 수식 자체를 유도하는 데에 집중한 반면, 물리화학 및 양자화학에서는 적당히 하다 건너뛰고 오히려 수소 뒤의 헬륨, 리튬 등 다른 원소에 적용하고 해석하는 데에 지면을 더 할애하고 있었다. (내 성적을 보자면 양자역학과 같은 쪽이 더 취향에 맞는걸로..)</p><p> 세포물리학은 더 놀라웠다. 생물 수업때 배운 시냅스의 구조 및 작용 원리에 대해서 물리학으로 접근해서, 운동방정식을 세우고 디멘션을 쪼개서 입자의 운동으로 설명하고 있었다.</p><p> 여기서 약간의 insight를 얻었다. Data Science는 결국 주어진 데이터 뭉치에서 어떤 특정한 factor에 집중해서 남들이 보지 못한 <strong>문맥 속 이야기</strong> 를 끌어내는 것이 아닌가?</p><p> 내가 가진 다양한 시각으로 데이터를 분석해서, 비즈니스의 혁신을 일으키고 싶은 것이 내 목표다. 그러기 위해서는 기본적인 개발 언어를 하나 제대로 익혀야겠지?</p><p> 주중에는 학교 수업이랑 회사 일때문에 많이 바쁘다. 그와중에 매주 주말 6시간짜리 코스를 신청하다니.. 이젠 죽었다 ㅠㅠ</p><p> 한번 열심히 해봐야지!</p>]]></content>
    
    <summary type="html">
    
      파이썬 시작하기
    
    </summary>
    
      <category term="Python" scheme="http://jeongwookie.github.io/categories/Python/"/>
    
      <category term="KAIST IT 강좌" scheme="http://jeongwookie.github.io/categories/Python/KAIST-IT-%EA%B0%95%EC%A2%8C/"/>
    
    
      <category term="Python" scheme="http://jeongwookie.github.io/tags/Python/"/>
    
      <category term="교육" scheme="http://jeongwookie.github.io/tags/%EA%B5%90%EC%9C%A1/"/>
    
      <category term="KAIST" scheme="http://jeongwookie.github.io/tags/KAIST/"/>
    
  </entry>
  
</feed>
